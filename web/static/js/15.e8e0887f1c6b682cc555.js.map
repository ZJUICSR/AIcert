{"version":3,"sources":["webpack:///src/views/dialog/AdvAttackEval.vue","webpack:///./src/views/dialog/AdvAttackEval.vue?7ba1","webpack:///./src/views/dialog/AdvAttackEval.vue","webpack:///src/views/advAttack.vue","webpack:///./src/views/advAttack.vue?e922","webpack:///./src/views/advAttack.vue"],"names":["AdvAttackEval","name","components","PictureTable","props","isShow","type","Boolean","default","required","result","postData","widNum","Number","leftSite","topDistance","pdt","pdb","data","htmlTitle","echart_init","res","selectPicList","watch","newValue","oldValue","this","updated","methods","closeMyself","$emit","_stopPropagation","ev","stopPropagation","defenseShow","method","arguments","length","undefined","JSON","parse","join","temp","labels","maxasr","maxmethod","ASRlist","timelist","maxtime","mintime","maxtimemethod","mintimemethod","adv_attack","indexOf","asr","toFixed","time","push","bef_dirname","pic","split","adv_dirname","per_dirname","methodstr","Method","Model","score","Eva","option","xAxis","tooltip","trigger","axisPointer","formatter","yAxis","axisLabel","min","max","series","setTimeout","myChart","echarts","document","getElementById","setOption","option2","timechart","dialog_AdvAttackEval","render","_vm","_h","$createElement","_c","_self","staticClass","on","click","_e","_v","attrs","$event","staticStyle","font-size","color","_t","width","height","src","__webpack_require__","id","Object","keys","background","padding","span","_s","Dataset","position","text-align","line-height","font-weight","score_des","key","margin-bottom","table-id","header","headerRow","headerColumn","have-border","content","single-output","cellWidth","setCellWidth","cellHeight","margin-top","background-color","border-radius","getPdf","staticRenderFns","views_dialog_AdvAttackEval","normalizeComponent","ssrContext","selectSvg","template","selectIcon","advAttack","navmodule","nav","func_introduce","funcIntroduce","showLog","resultDialog","DataSetCard","ModelCard","MethodCard","methodHoverIndex","methodDescription","radioStyle","display","lineHeight","buttonBGColor","disStatus","logflag","percent","logtext","funcDesText","imgpath","modelEvaIcon_default","a","bgimg","modelEvaBackground_default","destext","backinfo","highlight","tid","stidlist","clk","logclk","dataSetInfo","class","description","pictureSrcs","selectedDataset","modelInfo","layer","selectedModel","methodInfo","attributes","defaultNumber","number","step","valuelist","methodInfoNoParam","selectedMethod","selectedAttributes","resultVisible","isShowPublish","immediate","handler","v","noScroll","canScroll","created","title","closeDialog","updateMethod","index","checked","splice","console","log","getData","that","$axios","get","params","Taskid","then","getLog","stringify_default","values_default","Log","slice","stopTimer","stop","clearInterval","update","err","dataEvaClick","dataset","model","i","attributes_dict","info","methodnum","_i","j","post","AttackAndDefenseTask","setInterval","advattack","stid","catch","$message","warning","changeDataset","changeModel","updataMethodAttributes","changeMethods","button","style","borderColor","blur","alt","disabled","_l","_b","indexInParent","selectDataset","selectModel","attack_type","updateAttributes","selectMethod","gutter","flex","is-show","on-close","advAttack_Component","advAttack_normalizeComponent","views_advAttack"],"mappings":"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","file":"static/js/15.e8e0887f1c6b682cc555.js","sourcesContent":["<template>\n  <div class=\"dialog\">\n      <!--外层的遮罩 点击事件用来关闭弹窗，isShow控制弹窗显示 隐藏的props-->\n      <div class=\"dialog-cover back\"  v-if=\"isShow\" @click=\"closeMyself\"></div>\n      <!-- transition 这里可以加一些简单的动画效果 -->\n      <transition name=\"drop\">\n          <!--style 通过props 控制内容的样式 -->\n          <div class=\"dialog-content\" v-if=\"isShow\" @click.stop=\"_stopPropagation($event)\">\n              <div class=\"dialog_head back\">\n                  <!--弹窗头部 title-->\n                  <div class=\"close_button\">\n                      <a-icon type=\"close\" @click=\"closeMyself\" style=\"font-size: 20px;color:#6C7385;\" class=\"closebutton\"/>\n                  </div>\n                  <slot name=\"header\">\n                    <div class=\"dialog-title\"><img src=\"../../assets/img/modelEvaIcon.png\" style=\"width: 50px; height: 50px;\">对抗攻击评估</div>\n                  </slot>\n              </div>\n              <div class=\"dialog_main\" id=\"pdfDom\" >\n              <!--弹窗的内容-->\n                  <slot name=\"main\">\n                    <!-- 攻击信息 -->\n                    <div v-if=\"Object.keys(postData).length > 0\" style=\"background: var(--gray-7, #F2F4F9);;width: 100%;padding: 24px;\">\n                      <a-row >\n                        <a-col :span=\"2\">\n                          <div class=\"grid-content-name\" style=\"color:#6C7385\">数据集:</div>\n        \n                        </a-col>\n                        <a-col :span=\"5\">\n                          <div class=\"grid-content-value\">{{postData.Dataset}}</div>\n\n                        </a-col>\n                        <a-col :span=\"2\">\n                          <div class=\"grid-content-name\" style=\"color:#6C7385\">模型:</div>\n\n                        </a-col>\n                        <a-col :span=\"5\">\n                          <div class=\"grid-content-value\">{{postData.Model}}</div>\n \n                        </a-col>\n                        <a-col :span=\"2\">\n                          <div class=\"grid-content-name\" style=\"color:#6C7385\">攻击方法:</div>\n     \n                        </a-col>\n                        <a-col :span=\"8\">\n                          <div class=\"grid-content-value\">{{defenseShow(postData.Method)}}</div>\n                        </a-col>\n                      </a-row>\n                    </div>\n                    <!-- 总得分 -->\n                    <div class=\"result-title\">模型鲁棒性得分</div>\n                    <div style=\"position:relative;text-align: center;\">\n                      <div style=\"width: 100%; height: 300px; position: absolute; text-align: center; line-height: 230px;\n                        font-size: 80px; color: white; font-weight: bold;\n                        \"> {{res.score}} </div>\n                      <div style=\"width: 100%; height: 300px; position: absolute; text-align: center; line-height: 330px;\n                        font-size: 20px; color: white;\n                        \"> {{res.Eva}}  </div>\n                      <img style=\"width: 300px; height: 300px;\" src=\"../../assets/img/score.png\">\n                      <div class=\"conclusion\"><p class=\"result_text \">{{res.score_des}}</p></div>\n                    </div>\n                    \n                    <!-- 评估详情 -->\n                    <div class=\"result-title\">对抗攻击评估详情</div>\n                    <div>\n                      <div class=\"result-subtitle\">对抗攻击攻击效果</div>\n                      <div id=\"myChart\" class=\"echart\" style=\"width: 1000px; height: 400px;\"></div>\n                      <!-- <div class=\"conclusion\">\n                        <p class=\"result_text \">本次攻击方法有{{defenseShow(postData.Method)}}，其中攻击效果最佳的为{{res.maxmethod}}，攻击成功率为{{res.maxasr}}。</p>\n                      </div> -->\n                    </div>\n                    <div>\n                      <div class=\"result-subtitle\">对抗攻击单次运行时间对比</div>\n                      <div id=\"timeChart\" class=\"echart\" style=\"width: 1000px; height: 400px;\"></div>\n                      <div class=\"conclusion\">\n                        <p class=\"result_text \">从结果中可以看到，在测试的几种攻击中，其中攻击效果最佳的为{{res.maxmethod}}，攻击成功率为{{res.maxasr}},{{ res.mintimemethod }}所花费的时间最少，而{{ res.maxtimemethod }}类攻击所花费的时间最多，但是其达到的准确率也较高</p>\n                      </div>\n                    </div>\n                    <div class=\"result-title\">对抗样本示例</div>\n                    <!-- 图片表格 -->\n                    <PictureTable key=\"pictable0\" table-id=\"table0\" :header=\"true\" :headerRow=\"true\" :headerColumn=\"true\"\n                      :have-border=\"true\" :content=\"selectPicList\" :single-output=\"true\" :cellWidth=\"setCellWidth\"\n                      cellHeight=\"140px\" class=\"center-horizon\" style=\"height: 100%;width: 1000px; margin-bottom: 20px;\">\n                    </PictureTable>\n                    <a-button @click=\"getPdf()\" style=\"width:160px;height:40px;margin-bottom:30px;margin-top:10px;\n                    font-size:18px;color:white;background-color:rgb(46, 56, 245);border-radius:8px;\">\n                      <a-icon type=\"upload\" />导出报告内容\n                    </a-button>\n                  </slot>\n              </div>\n          </div>\n      </transition>\n  </div>\n</template>\n<script>\nimport * as echarts from \"echarts\";\nimport PictureTable from \"../../components/pictureTable.vue\";\nexport default {\n  name:\"resultDialog\",\n  components: {\n    PictureTable: PictureTable\n  },\n  props: {\n      isShow: {\n      //弹窗组件是否显示 默认不显示\n      type: Boolean,\n      default: false,\n      required:true, //必须\n      },\n      result:{},\n      postData:{\n      },\n      //下面这些属性会绑定到div上面 详情参照上面的html结构\n      // 如： :style=\"{top:topDistance+'%',width:widNum+'%'}\"\n      widNum:{\n      //内容宽度\n      type: Number,\n      default:50\n      },\n      leftSite:{\n      // 左定位\n      type: Number,\n      default:25.2\n      },\n      topDistance: {\n      //top上边距\n      type: Number,\n      default:10\n      },\n      pdt:{\n      //上padding\n      type: Number,\n      default:22\n      },\n      pdb:{\n      //下padding\n      type: Number,\n      default:47\n      }\n      },\n      \n  data() {\n    return {\n      htmlTitle:\"对抗攻击评估报告\",\n      echart_init: false,\n      res:{},\n      selectPicList: [\n        [\"攻击方法\", \"加噪前\", \"噪声\", \"加噪后\"],\n        ]\n    }\n  },\n  watch:{\n    result(newValue, oldValue){\n      if (\"adv_attack\" in newValue){\n\n        this.updated()\n      }\n    }\n    \n  },\n  // props:[\"is-show\",\"top-distance\"],\n  methods: {\n      closeMyself() {\n        this.$emit(\"on-close\");\n        //如果需要传参的话，可以在\"on-close\"后面再加参数，然后在父组件的函数里接收就可以了。\n      },\n      _stopPropagation(ev){\n          var _this = this;\n          ev.stopPropagation();\n      },\n      // 防御方法参数显示-\n      defenseShow(method=\"[]\"){\n            let param = JSON.parse(method);\n            return param.join('、');\n        },\n      updated(){\n        //code\n        this.res.labels = [];\n        this.res.maxasr = 0\n        this.res.maxmethod = \"\"\n        this.res.ASRlist = []\n        this.res.timelist = []\n        this.res.maxtime = 0\n        this.res.mintime = 100\n        this.res.maxtimemethod = \"\"\n        this.res.mintimemethod = \"\"\n        this.res.timelist = []\n        for(let temp in this.result.adv_attack){\n          if( [\"stop\",\"tid\", \"stidlist\"] .indexOf(temp) == -1){\n            if (this.res.maxasr < this.result.adv_attack[temp].asr){\n              this.res.maxasr = this.result.adv_attack[temp].asr.toFixed(2)\n              this.res.maxmethod = temp\n            }\n            if (this.res.maxtime < this.result.adv_attack[temp].time){\n              this.res.maxtime = this.result.adv_attack[temp].time\n              this.res.maxtimemethod = temp\n            }\n            if (this.res.mintime > this.result.adv_attack[temp].time){\n              this.res.mintime = this.result.adv_attack[temp].time\n              this.res.mintimemethod = temp\n            }\n            this.res.labels.push(temp)\n            this.res.ASRlist.push(this.result.adv_attack[temp].asr.toFixed(2))\n            this.res.timelist.push(this.result.adv_attack[temp].time.toFixed(4))\n            let bef_dirname = './static/output'+this.result.adv_attack[temp].pic[0].split(\"output\")[1]\n            let adv_dirname = './static/output'+this.result.adv_attack[temp].pic[1].split(\"output\")[1]\n            let per_dirname = './static/output'+this.result.adv_attack[temp].pic[2].split(\"output\")[1]\n            this.selectPicList.push([temp, [[`${bef_dirname}`], \"pic\"], [[`${per_dirname}`], \"pic\"],[[`${adv_dirname}`], \"pic\"]])\n          }\n        }\n        this.res[\"score\"] = 100-this.res.maxasr\n        if(this.res[\"score\"] >= 80 ){\n          this.res[\"Eva\"] = \"优秀\"\n        }else if (this.res[\"score\"] <80 && this.res[\"score\"] >=60 ){\n          this.res[\"Eva\"] = \"良好\"\n        }else{\n          this.res[\"Eva\"] = \"差\"\n        }\n        let methodstr = this.defenseShow(this.postData.Method)\n        this.res[\"score_des\"] = `${this.postData.Model}模型鲁棒性得分为${this.res.score}，是一个较${this.res.Eva}的模型，本次对抗攻击方法有${methodstr}，其中${this.res.maxmethod}的攻击效果最佳`\n        let option = {\n          xAxis: {\n            type: 'category',\n            name:\"算法名称\",\n            data: this.res.labels\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            },\n            formatter: '{c}%'\n          },\n          yAxis: {\n            name:\"攻击成功率\",\n            type: 'value',\n            axisLabel: {\n              formatter: '{value} %'\n            },\n            min:0,\n            max:100,\n          },\n          series: [\n            {\n              data: this.res.ASRlist,\n              type: 'bar'\n            }\n          ]\n        }\n        \n        setTimeout(function(){let myChart = echarts.init(document.getElementById(\"myChart\"));\n          option && myChart.setOption(option);\n        },500)\n\n        \n        let option2 = {\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            },\n            formatter: '{c}s'\n          },\n          xAxis: {\n            name:\"算法名称\",\n            type: 'category',\n            data: this.res.labels\n          },\n          yAxis: {\n            name:\"运行时间（单位：s）\",\n            type: 'value'\n          },\n          series: [\n            {\n              data: this.res.timelist,\n              type: 'bar'\n            }\n          ]\n        }\n        setTimeout(function(){\n          let timechart = echarts.init(document.getElementById(\"timeChart\"));\n          option2 && timechart.setOption(option2);\n        },500)\n      }\n    }\n  }\n  \n\n</script>\n\n<style scoped>\n/* 最外层 设置position定位 */\n.dialog {\nposition: relative;\ncolor: #e7e5e6;\nfont-size: 16px;\n}\n/* 遮罩 设置背景层，z-index值要足够大确保能覆盖，高度 宽度设置满 做到全屏遮罩 */\n.dialog-cover {\nbackground: rgba(68, 68, 68, 0.8);\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\n}\n.close_button{\n  height: 40px;\n  width: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n}\n/* 内容层 z-index要比遮罩大，否则会被遮盖， */\n.dialog-content{\nposition: fixed;\ntop: 10px;\nwidth: 1080px;\nleft: 420px;\nbottom: 5px;\n/* 移动端使用felx布局 */\ndisplay: flex;\nflex-direction: column;\njustify-content: start;\nalign-items: center;\nz-index: 2001;\ncolor: rgb(0, 0, 0);\noverflow: scroll;\nbackground: #FFFFFF;\nbox-shadow: 0px 8px 20px rgba(44, 51, 67, 0.06);\nborder-radius: 8px;\n}\n/* 标题框样式 */\n.dialog_head{\n  width: 1080px;\n  left: 0px;\n  top: 1px;\n  height: 88px;\n  padding: 24px 18px 24px 24px;\n  border-bottom: 1px solid #E0E3EB;\n}\n\n.dialog_main{\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0px;\n  /* gap: 60px; */\n\n  position: absolute;\n  width: 1080px;\n  /* height: 8265px; */\n  left: 0px;\n  top: 89px;\n\n}\n.foot_close{\n  background: #5196FF;\n  border-radius: 4px;\n  width: 143px;\n  height: 50px;\n}\n.dialog-title{\n  display: inline;\n  margin-top: 38px;\n  width: 279px;\n  height: 36px;\n  font-family: 'HONOR Sans CN';\n  font-size: 24px;\n  color: #333333;\n  letter-spacing: 0;\n  line-height: 48px;\n  font-weight: 600;\n}\n.result-title {\n  margin-top: 30px;\n  font-family: 'HONOR Sans CN';\n  font-size: 28px;\n  color: #000;\n  letter-spacing: 0;\n  font-weight: 700;\n  text-align: center;\n}\n.describe {\n  font-family: 'HONOR Sans CN';\n  font-size: 16px;\n  color: #000000;\n  letter-spacing: 0;\n  text-align: center;\n}\n.result-subtitle {\n  margin-top: 20px;\n  color: var(--light-fontgray-4-title, rgba(0, 0, 0, 0.90));\n  text-align: center;\n  font-family: HONOR Sans CN;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 28px;\n}\n\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/dialog/AdvAttackEval.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dialog\"},[(_vm.isShow)?_c('div',{staticClass:\"dialog-cover back\",on:{\"click\":_vm.closeMyself}}):_vm._e(),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"drop\"}},[(_vm.isShow)?_c('div',{staticClass:\"dialog-content\",on:{\"click\":function($event){$event.stopPropagation();return _vm._stopPropagation($event)}}},[_c('div',{staticClass:\"dialog_head back\"},[_c('div',{staticClass:\"close_button\"},[_c('a-icon',{staticClass:\"closebutton\",staticStyle:{\"font-size\":\"20px\",\"color\":\"#6C7385\"},attrs:{\"type\":\"close\"},on:{\"click\":_vm.closeMyself}})],1),_vm._v(\" \"),_vm._t(\"header\",function(){return [_c('div',{staticClass:\"dialog-title\"},[_c('img',{staticStyle:{\"width\":\"50px\",\"height\":\"50px\"},attrs:{\"src\":require(\"../../assets/img/modelEvaIcon.png\")}}),_vm._v(\"对抗攻击评估\")])]})],2),_vm._v(\" \"),_c('div',{staticClass:\"dialog_main\",attrs:{\"id\":\"pdfDom\"}},[_vm._t(\"main\",function(){return [(Object.keys(_vm.postData).length > 0)?_c('div',{staticStyle:{\"background\":\"var(--gray-7, #F2F4F9)\",\"width\":\"100%\",\"padding\":\"24px\"}},[_c('a-row',[_c('a-col',{attrs:{\"span\":2}},[_c('div',{staticClass:\"grid-content-name\",staticStyle:{\"color\":\"#6C7385\"}},[_vm._v(\"数据集:\")])]),_vm._v(\" \"),_c('a-col',{attrs:{\"span\":5}},[_c('div',{staticClass:\"grid-content-value\"},[_vm._v(_vm._s(_vm.postData.Dataset))])]),_vm._v(\" \"),_c('a-col',{attrs:{\"span\":2}},[_c('div',{staticClass:\"grid-content-name\",staticStyle:{\"color\":\"#6C7385\"}},[_vm._v(\"模型:\")])]),_vm._v(\" \"),_c('a-col',{attrs:{\"span\":5}},[_c('div',{staticClass:\"grid-content-value\"},[_vm._v(_vm._s(_vm.postData.Model))])]),_vm._v(\" \"),_c('a-col',{attrs:{\"span\":2}},[_c('div',{staticClass:\"grid-content-name\",staticStyle:{\"color\":\"#6C7385\"}},[_vm._v(\"攻击方法:\")])]),_vm._v(\" \"),_c('a-col',{attrs:{\"span\":8}},[_c('div',{staticClass:\"grid-content-value\"},[_vm._v(_vm._s(_vm.defenseShow(_vm.postData.Method)))])])],1)],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"result-title\"},[_vm._v(\"模型鲁棒性得分\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"position\":\"relative\",\"text-align\":\"center\"}},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"300px\",\"position\":\"absolute\",\"text-align\":\"center\",\"line-height\":\"230px\",\"font-size\":\"80px\",\"color\":\"white\",\"font-weight\":\"bold\"}},[_vm._v(\" \"+_vm._s(_vm.res.score)+\" \")]),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"300px\",\"position\":\"absolute\",\"text-align\":\"center\",\"line-height\":\"330px\",\"font-size\":\"20px\",\"color\":\"white\"}},[_vm._v(\" \"+_vm._s(_vm.res.Eva)+\"  \")]),_vm._v(\" \"),_c('img',{staticStyle:{\"width\":\"300px\",\"height\":\"300px\"},attrs:{\"src\":require(\"../../assets/img/score.png\")}}),_vm._v(\" \"),_c('div',{staticClass:\"conclusion\"},[_c('p',{staticClass:\"result_text\"},[_vm._v(_vm._s(_vm.res.score_des))])])]),_vm._v(\" \"),_c('div',{staticClass:\"result-title\"},[_vm._v(\"对抗攻击评估详情\")]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"result-subtitle\"},[_vm._v(\"对抗攻击攻击效果\")]),_vm._v(\" \"),_c('div',{staticClass:\"echart\",staticStyle:{\"width\":\"1000px\",\"height\":\"400px\"},attrs:{\"id\":\"myChart\"}})]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"result-subtitle\"},[_vm._v(\"对抗攻击单次运行时间对比\")]),_vm._v(\" \"),_c('div',{staticClass:\"echart\",staticStyle:{\"width\":\"1000px\",\"height\":\"400px\"},attrs:{\"id\":\"timeChart\"}}),_vm._v(\" \"),_c('div',{staticClass:\"conclusion\"},[_c('p',{staticClass:\"result_text\"},[_vm._v(\"从结果中可以看到，在测试的几种攻击中，其中攻击效果最佳的为\"+_vm._s(_vm.res.maxmethod)+\"，攻击成功率为\"+_vm._s(_vm.res.maxasr)+\",\"+_vm._s(_vm.res.mintimemethod)+\"所花费的时间最少，而\"+_vm._s(_vm.res.maxtimemethod)+\"类攻击所花费的时间最多，但是其达到的准确率也较高\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"result-title\"},[_vm._v(\"对抗样本示例\")]),_vm._v(\" \"),_c('PictureTable',{key:\"pictable0\",staticClass:\"center-horizon\",staticStyle:{\"height\":\"100%\",\"width\":\"1000px\",\"margin-bottom\":\"20px\"},attrs:{\"table-id\":\"table0\",\"header\":true,\"headerRow\":true,\"headerColumn\":true,\"have-border\":true,\"content\":_vm.selectPicList,\"single-output\":true,\"cellWidth\":_vm.setCellWidth,\"cellHeight\":\"140px\"}}),_vm._v(\" \"),_c('a-button',{staticStyle:{\"width\":\"160px\",\"height\":\"40px\",\"margin-bottom\":\"30px\",\"margin-top\":\"10px\",\"font-size\":\"18px\",\"color\":\"white\",\"background-color\":\"rgb(46, 56, 245)\",\"border-radius\":\"8px\"},on:{\"click\":function($event){return _vm.getPdf()}}},[_c('a-icon',{attrs:{\"type\":\"upload\"}}),_vm._v(\"导出报告内容\\n                  \")],1)]})],2)]):_vm._e()])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4efd3a02\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/dialog/AdvAttackEval.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4efd3a02\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./AdvAttackEval.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./AdvAttackEval.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./AdvAttackEval.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4efd3a02\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./AdvAttackEval.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4efd3a02\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/dialog/AdvAttackEval.vue\n// module id = null\n// module chunks = ","<template>\r\n     <div>\r\n        <a-layout>\r\n            <!-- 顶部菜单栏 -->\r\n            <a-layout-header>\r\n                <!-- 导航栏 -->\r\n                <navmodule />\r\n            </a-layout-header>\r\n            <a-layout-content>\r\n                <!-- 功能介绍 -->\r\n                <func_introduce :funcDesText=\"funcDesText\"></func_introduce>\r\n                <!-- 参数配置 -->\r\n                <div class=\"paramCon\">\r\n                    <!-- 参数配置容器 -->\r\n                    <h2 class=\"subTitle\" style=\"margin-top: -96px;\">参数配置</h2>\r\n\r\n                    <div class=\"funcParam\">\r\n                        <div class=\"paramTitle\">\r\n                            <!-- 功能标题和执行按钮 -->\r\n                            <!-- icon展示 -->\r\n                            <img class=\"paramIcom\" :src=\"funcDesText.imgpath\" :alt=\"funcDesText.name\">\r\n                            <!-- 功能名称 -->\r\n                            <h3>{{ funcDesText.name }}</h3>\r\n                            <a-button class=\"DataEva\" @click=\"dataEvaClick\" :style=\"buttonBGColor\" :disabled=\"disStatus\">\r\n                                <a-icon type=\"security-scan\" />\r\n                                评估\r\n                            </a-button>\r\n                        </div>\r\n                        <a-divider />\r\n                        <div class=\"inputdiv\">\r\n                            <!-- 输入主体 -->\r\n                            <div class=\"mainParamNameNotop\">请选择数据集</div>\r\n                            <DataSetCard style=\"width: 1104px; margin-bottom: 16px;\" v-for=\"(info, index) in dataSetInfo\"\r\n                                :key=\"'Dataset' + index\" v-bind=\"info\" :indexInParent=\"index\" @selectDataset=\"changeDataset\"\r\n                                :checked=\"index == selectedDataset\">\r\n                            </DataSetCard>\r\n                            <div class=\"mainParamName48\">请选择模型</div>\r\n                            <ModelCard style=\"width: 1104px; margin-bottom: 16px;\" v-for=\"(info, index) in modelInfo\" :key=\"'Model' + index\"\r\n                                v-bind=\"info\" :indexInParent=\"index\" @selectModel=\"changeModel\"\r\n                                :checked=\"index == selectedModel\">\r\n                            </ModelCard>\r\n                            <div class=\"mainParamName48\">请选择攻击方法（可多选）</div>\r\n                            <MethodCard style=\"width: 1104px; \" v-for=\"(info, index) in methodInfo\" :key=\"'Method' + index\"\r\n                                v-bind=\"info\" :indexInParent=\"index\" :attack_type=\"'advAttack'\" :dataset=\"selectedDataset\" @updateAttributes=\"updataMethodAttributes\" \r\n                                @selectMethod=\"updateMethod\" :checked=\"selectedMethod.indexOf(methodInfo[index].id) > -1\">\r\n                            </MethodCard>\r\n                            <div v-for=\"(methods, i) in methodInfoNoParam\" :key=\"i\" style=\"margin-bottom: 16px;\">\r\n                                <a-row :gutter=\"16\" style=\"height:50px;\" type=\"flex\">\r\n                                    <a-col :flex=\"24 / methods.length\" v-for=\"(method, j) in methods\" :key=\"j\" class=\"denfenseMethod\">\r\n                                        <a-button :id=\"'button' + i + j\"  @click=\"changeMethods(i,j)\"\r\n                                            >{{ method.name }}</a-button>\r\n                                    </a-col>\r\n                                </a-row>\r\n                                <div v-if=\"methodHoverIndex==i && methodDescription !== ''\" style=\"padding:14px 24px;margin-bottom: 16px;\"> {{ methodDescription }} </div>\r\n                            </div>\r\n                            <AdvAttackEval :is-show=\"resultVisible\" :result=\"result\" :postData=\"postData\" @on-close=\"() => { resultVisible = !resultVisible }\">\r\n                            </AdvAttackEval>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- 日志展示 -->\r\n                <div v-if=\"logflag\">\r\n                    <showLog :percent=\"percent\" :logtext=\"logtext\"></showLog>\r\n                </div>\r\n            </a-layout-content>\r\n            <a-layout-footer class=\"layoutFooter\">\r\n\r\n            </a-layout-footer>\r\n        </a-layout>\r\n     </div>\r\n</template>\r\n<script>\r\n/* 引入组件，导航栏 */\r\nimport navmodule from \"../components/nav.vue\";\r\n/* 引入组件，功能介绍 */\r\nimport func_introduce from \"../components/funcIntroduce.vue\"\r\n/* 引入组件，日志显示 */\r\nimport showLog from \"../components/showLog.vue\"\r\n/* 引入组件，结果显示 */\r\nimport resultDialog from \"../components/resultDialog.vue\"\r\n\r\nimport funcicon from \"../assets/img/modelEvaIcon.png\"\r\nimport bgimg from \"../assets/img/modelEvaBackground.png\"\r\n\r\nimport DataSetCard from \"../components/card/DataSetCard.vue\"\r\nimport ModelCard from \"../components/card/ModelCard.vue\"\r\nimport MethodCard from \"../components/card/MethodCard.vue\"\r\nimport AdvAttackEval from \"./dialog/AdvAttackEval.vue\"\r\n\r\nconst selectSvg = {\r\n        template:`\r\n        <svg t=\"1680138013828\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4354\" width=\"128\" height=\"128\"><path d=\"M534.869333 490.496a1403.306667 1403.306667 0 0 0 50.858667-25.813333c16.042667-8.618667 29.013333-15.061333 38.570667-19.029334 9.557333-3.925333 17.066667-6.058667 22.869333-6.058666 9.557333 0 17.749333 3.2 24.917333 10.026666 6.826667 6.826667 10.581333 15.061333 10.581334 25.088 0 5.76-1.706667 11.818667-5.12 17.92-3.413333 6.101333-7.168 10.069333-10.922667 11.861334-35.157333 14.677333-74.410667 25.429333-116.736 31.872 7.850667 7.168 17.066667 17.237333 28.330667 29.781333 11.264 12.544 17.066667 18.986667 17.749333 20.053333 4.096 6.101333 9.898667 13.653333 17.408 22.613334 7.509333 8.96 12.629333 15.786667 15.36 20.778666 2.730667 5.034667 4.437333 11.093333 4.437333 18.304a33.706667 33.706667 0 0 1-9.898666 24.021334 33.834667 33.834667 0 0 1-25.6 10.410666c-10.24 0-22.186667-8.618667-35.157334-25.472-12.970667-16.512-30.037333-46.933333-50.517333-91.050666-20.821333 39.424-34.816 65.962667-41.642667 78.506666-7.168 12.544-13.994667 22.186667-20.48 28.672a30.976 30.976 0 0 1-22.528 9.685334 32.256 32.256 0 0 1-25.258666-11.093334 35.413333 35.413333 0 0 1-9.898667-23.68c0-7.893333 1.365333-13.653333 4.096-17.578666 25.258667-35.84 51.541333-67.413333 78.848-93.568a756.650667 756.650667 0 0 1-61.44-12.544 383.061333 383.061333 0 0 1-57.685333-20.48c-3.413333-1.749333-6.485333-5.717333-9.557334-11.818667a30.208 30.208 0 0 1-5.12-16.853333 32.426667 32.426667 0 0 1 10.581334-25.088 33.152 33.152 0 0 1 24.234666-10.026667c6.485333 0 14.677333 2.133333 24.576 6.101333 9.898667 4.266667 22.186667 10.026667 37.546667 18.261334 15.36 7.893333 32.426667 16.853333 51.882667 26.538666-3.413333-18.261333-6.485333-39.082667-8.874667-62.378666-2.389333-23.296-3.413333-39.424-3.413333-48.042667 0-10.752 3.072-19.712 9.557333-27.264A30.677333 30.677333 0 0 1 512.341333 341.333333c9.898667 0 18.090667 3.925333 24.576 11.477334 6.485333 7.893333 9.557333 17.92 9.557334 30.464 0 3.584-0.682667 10.410667-1.365334 20.48-0.682667 10.368-2.389333 22.570667-4.096 36.906666-2.048 14.677333-4.096 31.146667-6.144 49.834667z\" fill=\"#FF3838\" p-id=\"4355\"></path></svg>\r\n        `,\r\n    };\r\n    const selectIcon = {\r\n        template: `\r\n            <a-icon :component=\"selectSvg\" />\r\n        `,\r\n        data() {\r\n            return {\r\n                selectSvg,\r\n            };\r\n        },\r\n    }\r\nexport default {\r\n    name:\"advAttack\",\r\n    components:{\r\n        /* 注册组件 */\r\n        navmodule:navmodule,\r\n        func_introduce:func_introduce,\r\n        showLog:showLog,\r\n        resultDialog:resultDialog,\r\n        selectIcon,\r\n        DataSetCard,\r\n        ModelCard,\r\n        MethodCard,\r\n        AdvAttackEval,\r\n    },\r\n    data(){\r\n        return{\r\n            methodHoverIndex:-1,\r\n            methodDescription:\"\",\r\n            /* 单选按钮样式 */\r\n            radioStyle: {\r\n                display: 'block',\r\n                lineHeight: '30px',\r\n            },\r\n            /* 评估按钮样式和状态 */\r\n            buttonBGColor:{\r\n                background:\"#0B55F4\",\r\n                color:\"#FFFFFF\"\r\n            },\r\n            // 按钮是否置灰\r\n            disStatus:false,\r\n            /* 日志框是否显示，false不显示，true显示，默认不显示 */\r\n            logflag:false,\r\n            /* 进度 */\r\n            percent:10,\r\n            /* 日志内容，调用日志接口获取 */\r\n            logtext:[],\r\n            /* 功能介绍模块信息 */\r\n            funcDesText:{\r\n                /* 功能名称 */\r\n                name: \"对抗攻击评估\",\r\n                /* 功能icon，需先引入 */\r\n                imgpath:funcicon,\r\n                /* 功能背景图片，需先引入 */\r\n                bgimg:bgimg,\r\n                /* 功能介绍下的总介绍 */\r\n                destext:\"多种对抗攻击算法对深度学习模型进行攻击，可视化展示对抗攻击对深度学习模型的影响\",\r\n                /* 背景介绍 */\r\n                backinfo:\"对抗攻击是指在数据集中通过故意添加细微的干扰所形成的输入样本，\\\r\n                导致模型以高置信度给出一个错误的输出。本功能支持白盒攻击和黑盒攻击共百余种算法\",\r\n                /* 亮点介绍 */\r\n                highlight:[\r\n                    \"白盒攻击算法：包含经典的FGSM、BIM、PGD等算法\",\r\n                    \"黑盒攻击算法：包含主流的SquareAttack、SimBA、ZOO以及新颖的Fastdrop等对抗攻击算法\",\r\n                    \"支持可视化对比各种攻击算法的攻击效果，高效评估模型鲁棒下限\"\r\n                ]\r\n            },\r\n            /* 评估结果 */\r\n            result:{},\r\n            /* 主任务id */ \r\n            tid:\"\",\r\n            /* 子任务id */ \r\n            stidlist:{},\r\n            /* 异步任务结果查循环clock */\r\n            clk:\"\",\r\n            /* 日志查询clock*/\r\n            logclk: \"\",\r\n            // 数据集信息\r\n            dataSetInfo: [\r\n            {\r\n                name: \"CIFAR10\",\r\n                class:['airplane','automobile','bird','cat','deer','dog','frog','horse','ship','truck'],\r\n                description: \"是由 Hinton 的学生 Alex Krizhevsky 和 Ilya Sutskever 整理的一个用于识别普适物体的小型数据集。一共包含 10 个类别的 RGB 彩色图 片：飞机（ airplane ）、汽车（ automobile ）、鸟类（ bird ）、猫（ cat ）、鹿（ deer ）、狗（ dog ）、蛙类（ frog ）、马（ horse ）、船（ ship ）和卡车（ truck ）。图片的尺寸为 32×32 ，数据集中一共有 50000 张训练圄片和 10000 张测试图片。\",\r\n                pictureSrcs: [\r\n                    [require('../assets/img/cifar100.jpg'), \r\n                    require('../assets/img/cifar101.jpg'),\r\n                    require('../assets/img/cifar102.jpg'), \r\n                    require('../assets/img/cifar103.jpg'), \r\n                    require('../assets/img/cifar104.jpg'), \r\n                    require('../assets/img/cifar105.jpg'), \r\n                    require('../assets/img/cifar106.jpg'),\r\n                    require('../assets/img/cifar107.jpg'),\r\n                    require('../assets/img/cifar108.jpg'),\r\n                    require('../assets/img/cifar109.jpg')],\r\n                    ],\r\n                },\r\n                {\r\n                    name: \"MNIST\",\r\n                    description: \"是一个手写体数字的图片数据集，该数据集来由美国国家标准与技术研究所（National Institute of Standards and Technology (NIST)）发起整理，一共统计了来自250个不同的人手写数字图片，其中50%是高中生，50%来自人口普查局的工作人员。该数据集的收集目的是希望通过算法，实现对手写数字的识别。\",\r\n                    class:['数字0','数字1','数字2','数字3','数字4','数字5','数字6','数字7','数字8','数字9'],\r\n                    pictureSrcs: [\r\n                        [require(\"../assets/img/mnist0.jpg\"),\r\n                        require('../assets/img/mnist1.jpg'),\r\n                        require('../assets/img/mnist2.jpg'), \r\n                        require('../assets/img/mnist3.jpg'), \r\n                        require('../assets/img/mnist4.jpg'), \r\n                        require('../assets/img/mnist5.jpg'), \r\n                        require('../assets/img/mnist6.jpg'),\r\n                        require('../assets/img/mnist7.jpg'),\r\n                        require('../assets/img/mnist8.jpg'),\r\n                        require('../assets/img/mnist9.jpg'),],\r\n                    ],\r\n                },\r\n                \r\n            ],\r\n            selectedDataset: 0,\r\n            modelInfo: [\r\n                {\r\n                    name: \"ResNet18\",\r\n                    layer:18\r\n                },\r\n                {\r\n                    name: \"ResNet34\",\r\n                    layer:34\r\n                },\r\n                {\r\n                    name: \"ResNet50\",\r\n                    layer:50\r\n                },\r\n                {\r\n                    name: \"ResNet101\",\r\n                    layer:101\r\n                },\r\n                {\r\n                    name: \"ResNet152\",\r\n                    layer:152\r\n                },\r\n            ],\r\n            selectedModel: 0,\r\n            methodInfo: [\r\n                {\r\n                    name: \"FGSM\",\r\n                    id:\"FGSM\",\r\n                    description: \"Fast Gradient Sign MethodFGSM快速梯度符号法是一种简单而有效的生成对抗样本的方法，其工作方式如下：在给定输入数据后，利用已训练的模型输出预测并计算损失函数的梯度，然后使用梯度的符号来创建使损失最大化的新数据\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.031, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                            { name: \"范数\", key:\"norm\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"1\",\"2\",\"inf\"]},\r\n                        \r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"BIM\",\r\n                    id:\"BIM\",\r\n                    description: \"Basic Iterative MethodBIM迭代式FGSM是对FGSM的改进方法，主要的改进有两点，其一是FGSM方法是一步完成的，而BIM方法通过多次迭代来寻找对抗样本；其次，为了避免迭代过程中出现超出有效值的情况出现，使用了一个修建方法严格限制像素值的范围\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.031, number: 0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.01, number: 0, type: \"inputNumber\" , min: 0, step:1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        { name: \"范数\", key:\"norm\", defaultNumber: 2, number: 2, type: \"selectgroup\" ,valuelist:[1,2,\"inf\"]},\r\n                    ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"PGDL1\",\r\n                    id:\"PGDL1\",\r\n                    description: \"Projected Gradient DescentPGD投影梯度下降法是FGSM的迭代版本，该方法思路和BIM基本相同，不同之处在于该方法在迭代过程中使用范数投影的方法来约束非法数据，并且相对于BIM有一个随机的开始噪声。支持L1 norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.3, number: 0.0, type: \"inputNumber\" , min: 0,step:0.1},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.1, number: 0.0, type: \"inputNumber\" , min: 0, step:0.1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" , min: 1,  step:1},\r\n                        { name: \"随机开始次数\", key:\"num_random_init\", defaultNumber: 1, number: 0, type: \"inputNumber\" ,min: 0,  step:1},\r\n                    ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"PGDL2\",\r\n                    id:\"PGDL2\",\r\n                    description: \"Projected Gradient DescentPGD投影梯度下降法是FGSM的迭代版本，该方法思路和BIM基本相同，不同之处在于该方法在迭代过程中使用范数投影的方法来约束非法数据，并且相对于BIM有一个随机的开始噪声。支持L2 norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.3, number: 0.0, type: \"inputNumber\" , min: 0,step:0.1},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.1, number: 0.0, type: \"inputNumber\" , min: 0, step:0.1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" , min: 1,  step:1},\r\n                        { name: \"随机开始次数\", key:\"num_random_init\", defaultNumber: 1, number: 0, type: \"inputNumber\" ,min: 0,  step:1},\r\n                    ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"PGDLinf\",\r\n                    id:\"PGDLinf\",\r\n                    description: \"Projected Gradient DescentPGD投影梯度下降法是FGSM的迭代版本，该方法思路和BIM基本相同，不同之处在于该方法在迭代过程中使用范数投影的方法来约束非法数据，并且相对于BIM有一个随机的开始噪声。支持Linf norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.3, number: 0.0, type: \"inputNumber\" , min: 0,step:0.1},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.1, number: 0.0, type: \"inputNumber\" , min: 0, step:0.1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" , min: 1,  step:1},\r\n                        { name: \"随机开始次数\", key:\"num_random_init\", defaultNumber: 1, number: 0, type: \"inputNumber\" ,min: 0,  step:1},   \r\n                    ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"C&W\",\r\n                    id:\"C&W\",\r\n                    description: \"该方法的出发点是攻击比较有名的对抗样本防御方法-防御蒸馏(就防御蒸馏方法而言，它在基本的L-BFGS，FGSM攻击方法上表现本身就比较差)。对于寻找对抗样本过程中目标函数的设置将会极大的影响对抗样本的攻击效果，为此，通过目标函数的设定，在零范数，二范数和无穷范数的限制下分别设计了三种不同的寻找对抗样本的目标函数，这三种方法均可以绕过防御蒸馏的防御\",\r\n                    attributes: [\r\n                        [{ name: \"最大迭代次数\", key:\"max_iterations\", defaultNumber: 1000, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        { name: \"优化器学习率\", key:\"lr\", defaultNumber: 0.01, number: 0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"DeepFool\",\r\n                    id:\"DeepFool\",\r\n                    description: \"DeepFool方法的出发点是想要精确的度量模型对于对抗样本的鲁棒性，为此提出了鲁棒性定义和计算方法。最终使用该计算方法生成对抗样本\",\r\n                    attributes: [\r\n                        [ {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 50, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        { name: \"扰动系数\", key:\"eta\", defaultNumber: 0.02, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"JSMA\",\r\n                    id:\"JacobianSaliencyMap\",\r\n                    description: \"该方法通过输入样本每一个位置的前向导数，借鉴模型解释性方法中的显著图理论，构造了一种对抗显著图。对抗显著图上的点的值就是样本中每一个点对每个目标类的前向导数大小，直觉上来讲，其反映的是该样本点对生成某一个目标类对抗样本的贡献度。那么使用该对抗显著图，确定需要攻击到的目标类后，便可以从该图中选择对目标类对抗影响最大的点进行修改即可。\",\r\n                    attributes: [\r\n                        [{name: \"噪声大小\", key:\"theta\", defaultNumber: 0.1, number: 0.0, type: \"inputNumber\" , step:0.1},\r\n                        { name: \"允许修改的最大特征百分比\", key:\"gamma\", defaultNumber: 1.0, number: 0.0, type: \"inputNumber\" , min: 0, max: 1, step:0.1},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"Brendel&BethgeAttack\",\r\n                    id:\"Brendel&BethgeAttack\",\r\n                    description: \"边界攻击的基本思想是从一个已经是对抗样本的点(无目标攻击随意选择，有目标攻击选择目标类图片)开始，通过随机游走算法来减少对抗样本的强度，使其在决策边界上和被攻击的样本接近\",\r\n                    attributes: [\r\n                        [{ name: \"正交步骤的初始步长\", key:\"delta\", defaultNumber: 0.01, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        { name: \"趋近步骤的初始步长大小\", key:\"eps\", defaultNumber: 0.01, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        {name: \"调整步长因数\", key:\"step_adapt\", defaultNumber: 0.667, number: 0.0, type: \"inputNumber\" , min: 0, max: 1, step:0.001},\r\n                        { name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 1000, number: 0, type: \"inputNumber\" ,min: 1, step:1},   \r\n                        ],[\r\n                        { name: \"每次迭代的最大判定数\", key:\"num_trial\", defaultNumber: 25, number: 0, type: \"inputNumber\" , min: 1,step:1},\r\n                        { name: \"每次判定的样本数目\", key:\"sample_size\", defaultNumber: 20, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        {name: \"初始化的判定次数\", key:\"init_size\", defaultNumber: 100, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        ]\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"UniversalPerturbationL1\",\r\n                    id:\"UniversalPerturbationL1\",\r\n                    description: \"在一个给定模型和数据集上，通过迭代算法寻找一个让大多数图片都被错误分类的对抗噪声。支持L1 norm范数\",\r\n                    attributes: [\r\n                        [{ name: \"攻击方法\", key:\"attacker\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"FGSM\",\"BIM\",\"PGD\", \"DeepFool\", \"JSMA\", \"Carlini_l2\",\"Carlini_inf\",\"Simba\"]},],\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.078, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" ,min: 0, step:1},],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"UniversalPerturbationL2\",\r\n                    id:\"UniversalPerturbationL2\",\r\n                    description: \"在一个给定模型和数据集上，通过迭代算法寻找一个让大多数图片都被错误分类的对抗噪声。支持L2 norm范数\",\r\n                    attributes: [\r\n                        [{ name: \"攻击方法\", key:\"attacker\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"FGSM\",\"BIM\",\"PGD\", \"DeepFool\", \"JSMA\", \"Carlini_l2\",\"Carlini_inf\",\"Simba\"]},],[\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.078, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" ,min: 0, step:1},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"UniversalPerturbationLinf\",\r\n                    id:\"UniversalPerturbationLinf\",\r\n                    description: \"在一个给定模型和数据集上，通过迭代算法寻找一个让大多数图片都被错误分类的对抗噪声。支持Linf norm范数\",\r\n                    attributes: [\r\n                        [{ name: \"攻击方法\", key:\"attacker\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"FGSM\",\"BIM\",\"PGD\", \"DeepFool\", \"JSMA\", \"Carlini_l2\",\"Carlini_inf\",\"Simba\"]},],[\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.078, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" ,min: 0, step:1},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"AutoAttackL1\",\r\n                    id:\"AutoAttackL1\",\r\n                    description: \"该方法首先改进了PGD方法的步长调整方法以及其的损失函数，并且进一步将白盒的FAB攻击和黑盒的Square攻击集成到了框架中。支持L1 norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.031, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.01, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"AutoAttackL2\",\r\n                    id:\"AutoAttackL2\",\r\n                    description: \"该方法首先改进了PGD方法的步长调整方法以及其的损失函数，并且进一步将白盒的FAB攻击和黑盒的Square攻击集成到了框架中。支持L2 norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.031, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.01, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"AutoAttackLinf\",\r\n                    id:\"AutoAttackLinf\",\r\n                    description: \"该方法首先改进了PGD方法的步长调整方法以及其的损失函数，并且进一步将白盒的FAB攻击和黑盒的Square攻击集成到了框架中。支持Linf norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.031, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.01, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"GD-UAP\",\r\n                    id:\"GD-UAP\",\r\n                    description: \"该方法在UAP工作的基础上提出了数据不相关的通用对抗噪声。与UAP生成的基本方法不同，该方法以对一个神经网络所有神经元产生更大的输出为目标，即以寻求那些可以使网络整体神经元更加激活的输入噪声为目标，并且将该噪声作为通用对抗噪声\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"最小饱和度\", key:\"sat_min\", defaultNumber: 0.35, number: 0, type: \"inputNumber\" , min: 0, max: 1, step:0.01},\r\n                        { name: \"饱和度阈值\", key:\"sat_threshold\", defaultNumber: 0.00001, number: 0, type: \"inputNumber\" , min: 0, max: 1, step:0.00001},\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.078, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},],\r\n                        [\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 10000, number: 0, type: \"inputNumber\" ,min: 1,step:1},\r\n                        {name: \"耐心间隔\", key:\"patience_interval\", defaultNumber: 10, number: 0, type: \"inputNumber\" ,min: 0, step:1},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"SquareAttackL1\",\r\n                    id:\"SquareAttackL1\",\r\n                    description: \"该方法的主体思路是使用优化理论中的随机搜索方法来寻找对抗噪声，这种随机搜索的方法很多黑盒攻击方法都采用过。随机搜索的总体框架大体相同，如下图所示。基本思路是在在一个采用空间中随机选择一个噪声，如果该噪声能够降低目标函数的损失则将其添加到原图片上，否则进入下一轮的随机搜索。支持L1 norm范数。\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"初始化百分比\", key:\"p_init\", defaultNumber: 0.05, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        { name: \"重启次数\", key:\"n_restarts\", defaultNumber: 1, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        { name: \"loss类型\", key:\"loss_type\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"margin\",\"ce\"]},    \r\n                    ],\r\n                    ]\r\n                },{\r\n                    name: \"SquareAttackL2\",\r\n                    id:\"SquareAttackL2\",\r\n                    description: \"该方法的主体思路是使用优化理论中的随机搜索方法来寻找对抗噪声，这种随机搜索的方法很多黑盒攻击方法都采用过。随机搜索的总体框架大体相同，如下图所示。基本思路是在在一个采用空间中随机选择一个噪声，如果该噪声能够降低目标函数的损失则将其添加到原图片上，否则进入下一轮的随机搜索。支持L2 norm范数。\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"初始化百分比\", key:\"p_init\", defaultNumber: 0.05, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        { name: \"重启次数\", key:\"n_restarts\", defaultNumber: 1, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        { name: \"loss类型\", key:\"loss_type\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"margin\",\"ce\"]},\r\n                    ],\r\n                    ]\r\n                },{\r\n                    name: \"SquareAttackLinf\",\r\n                    id:\"SquareAttackLinf\",\r\n                    description: \"该方法的主体思路是使用优化理论中的随机搜索方法来寻找对抗噪声，这种随机搜索的方法很多黑盒攻击方法都采用过。随机搜索的总体框架大体相同，如下图所示。基本思路是在在一个采用空间中随机选择一个噪声，如果该噪声能够降低目标函数的损失则将其添加到原图片上，否则进入下一轮的随机搜索。支持Linf norm范数。\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"初始化百分比\", key:\"p_init\", defaultNumber: 0.05, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        { name: \"重启次数\", key:\"n_restarts\", defaultNumber: 1, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        { name: \"loss类型\", key:\"loss_type\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"margin\",\"ce\"]},\r\n                    ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"HSJA\",\r\n                    id:\"HSJA\",\r\n                    description: \"在优化框架下的基于决策的攻击，并提出了一系列新颖的算法，用于生成针对性和非针对性的对抗性示例，这些示例针对“ 2-距离”或“∞距离”的最小距离进行了优化。 该算法本质上是迭代的，每个迭代涉及三个步骤：梯度方向的估计，通过几何级数进行的步长搜索和通过二分法的边界搜索。对优化框架和梯度方向估计进行了理论分析。这不仅为选择超参数提供了参考，而且还激发了所提出算法中的必要步骤\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"梯度估计的最大次数\", key:\"max_eval\", defaultNumber: 1000, number: 0, type: \"inputNumber\" , min:1, step:1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 50, number: 0, type: \"inputNumber\" ,min: 1,  step:1},\r\n                        { name: \"范数\", key:\"norm\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[2,\"inf\"]},    \r\n                    ],[\r\n                        { name: \"梯度估计的初始次数\", key:\"init_eval\", defaultNumber: 100, number: 0, type: \"inputNumber\" , min:1, step:1},\r\n                        {name: \"初始最大试验次数\", key:\"init_size\", defaultNumber: 100, number: 0.0, type: \"inputNumber\" ,min: 1,  step:1},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"PixelAttack\",\r\n                    id:\"PixelAttack\",\r\n                    description: \"使用差分进化算法寻找满足零范数约束的对抗样本\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"允许修改的像素数目\", key:\"th\", defaultNumber: 1, number: 0, type: \"inputNumber\" , min: 1, max: 784, step:1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 5, number: 0, type: \"inputNumber\" ,min: 1, step:1},\r\n                        { name: \"进化算法\", key:\"es\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"DE\",\"CMAES\"]},],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"SimBA\",\r\n                    id:\"SimBA\",\r\n                    description: \"该方法的基本思想为对于图片空间的任意一个方向，添加或者减少一个扰动值，总是有可能让神经网络对于该图片属于某个类别的分数变得更低或者更高，因此论文通过随机选择一些坐标点，通过添加或者减少扰动值，使图片分类到某个类别的分数总是往更低的方向去，从而最终导致图片分类错误。这可以看作是一种贪婪的选择策略，每一步都选择对于自己最优的方向，以此来接近全局最优\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"过冲参数\", key:\"epsilon\", defaultNumber: 0.031, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 3000, number: 0, type: \"inputNumber\" ,min: 0, step:1},    \r\n                        { name: \"攻击方法\", key:\"attack\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"dct\",\"px\"]},\r\n                        { name: \"pixel攻击的顺序\", key:\"order\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"random\",\"diag\"]},\r\n                        \r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"ZOO\",\r\n                    id:\"ZOO\",\r\n                    description: \"在一个给定模型和数据集上，通过迭代算法寻找一个让大多数图片都被错误分类的对抗噪声。支持Linf norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"步长\", key:\"step_size\", defaultNumber: 0.01, number: 0, type: \"inputNumber\" , min: 0, max:1, step:0.01},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 3000, number: 0, type: \"inputNumber\" ,min: 1, step:1},\r\n                        { name: \"初始常量\", key:\"initial_const\", defaultNumber: 0.01, number: 0, type: \"inputNumber\" , min: 0, max:1, step:0.01},\r\n                        { name: \"置信度\", key:\"confidence\", defaultNumber: 0, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"GeoDAL1\",\r\n                    id:\"GeoDAL1\",\r\n                    description: \"该方法基于神经网络决策边界往往具有较低曲率的事实假设，提出了一种在线性框架下通过法向量估计的方法完成黑盒基于决策模式下的对抗样本搜寻的方法。支持L1 norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        {name: \"二维频率空间维数\", key:\"sub_dim\", defaultNumber: 10, number: 0, type: \"inputNumber\" ,min: 1,step:1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 1, number: 0, type: \"inputNumber\" ,min: 1, step:1},\r\n                        { name: \"高斯扰动方差\", key:\"sigma\", defaultNumber: 0.0002, number: 0.0, type: \"inputNumber\" , min: 0, step:0.0001},\r\n                        { name: \"λ参数\", key:\"lambda_param\", defaultNumber: 0.6, number: 0.0, type: \"inputNumber\" , min: 0, step:0.1},\r\n                        ],\r\n                    ]\r\n                },{\r\n                    name: \"GeoDAL2\",\r\n                    id:\"GeoDAL2\",\r\n                    description: \"该方法基于神经网络决策边界往往具有较低曲率的事实假设，提出了一种在线性框架下通过法向量估计的方法完成黑盒基于决策模式下的对抗样本搜寻的方法。支持L2 norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        {name: \"二维频率空间维数\", key:\"sub_dim\", defaultNumber: 10, number: 0, type: \"inputNumber\" ,min: 1,step:1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 1, number: 0, type: \"inputNumber\" ,min: 1, step:1},\r\n                        { name: \"高斯扰动方差\", key:\"sigma\", defaultNumber: 0.0002, number: 0.0, type: \"inputNumber\" , min: 0, step:0.0001},\r\n                        { name: \"λ参数\", key:\"lambda_param\", defaultNumber: 0.6, number: 0.0, type: \"inputNumber\" , min: 0, step:0.1},\r\n                        ],\r\n                    ]\r\n                },{\r\n                    name: \"GeoDALinf\",\r\n                    id:\"GeoDALinf\",\r\n                    description: \"该方法基于神经网络决策边界往往具有较低曲率的事实假设，提出了一种在线性框架下通过法向量估计的方法完成黑盒基于决策模式下的对抗样本搜寻的方法。支持Linf norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        {name: \"二维频率空间维数\", key:\"sub_dim\", defaultNumber: 10, number: 0, type: \"inputNumber\" ,min: 1,step:1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 1000, number: 0, type: \"inputNumber\" ,min: 1, step:1},\r\n                        { name: \"高斯扰动方差\", key:\"sigma\", defaultNumber: 0.0002, number: 0.0, type: \"inputNumber\" , min: 0, step:0.0001},\r\n                        { name: \"λ参数\", key:\"lambda_param\", defaultNumber: 0.6, number: 0.0, type: \"inputNumber\" , min: 0, step:0.1},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"Fastdrop\",\r\n                    id:\"Fastdrop\",\r\n                    description: \"该方法利用图像频域修改更加容易产生高质量对抗样本的思想，通过将图像变换到频域后，使用简单的频域小量随机丢弃和还原的搜索策略完成攻击\",\r\n                    attributes: [\r\n                    ]\r\n                },\r\n            ],\r\n            methodInfoNoParam:[[\r\n                {name:\"DIFGSM\",description:\"DIFGSM算法：Diverse Inputs Iterative Fast Gradient Sign Method,通过创建多样的输入模式提高对抗样本的迁移性。做法是对输入的原图像以p的概率加上随机且可导的变换(transformation)，使用梯度的方法最大化模型对变换后的原图像的损失函数值从而得到对抗图像\",},\r\n                {name:\"FAB\", description:\"FAB算法：Fast Adaptive Boundary Attack使用类似DeepFool投影到决策平面的方法，主要不同的是，FAB将过程中的扰动尽可能偏向原样本点，从而可以找到能改变分类器输出的最小扰动。扰动的衡量距离为 linf\",},\r\n                {name:\"FABL1\", description:\"FABL1算法：Fast Adaptive Boundary Attack使用类似DeepFool投影到决策平面的方法，主要不同的是，FAB将过程中的扰动尽可能偏向原样本点，从而可以找到能改变分类器输出的最小扰动。扰动的衡量距离为 l1\",},\r\n                {name:\"FABL2\", description:\"FABL2算法：Fast Adaptive Boundary Attack使用类似DeepFool投影到决策平面的方法，主要不同的是，FAB将过程中的扰动尽可能偏向原样本点，从而可以找到能改变分类器输出的最小扰动。扰动的衡量距离为 l2\",},\r\n                {name:\"EOTPGD\", description:\"EOTPGD算法：结合Expectation Over Transformation算法生成具有鲁棒性的对抗样本，能在变换(transformation)后依旧保持对抗性\",}\r\n                ],\r\n                [\r\n                {name:\"FFGSM\",description:\"FFGSM算法：在使用FGSM攻击算法前加入随机初始化的扰动，经过实验发现基于FFGSM的对抗训练拥有高效性\",},\r\n                {name:\"Jitter\",description:\"Jitter算法：使用新的损失函数从而改善效率和攻击成功率，同时通过输出logits标准化到固定值范围将规模不变性引入损失函数\",},\r\n                {name:\"MIFGSM\",description:\"MIFGSM算法：momentum iterative FGSM是一种使用momentum迭代梯度的方法，该方法在迭代梯度对抗攻击(如BIM)的基础上，累计每次梯度方向的速度向量作为momentum，每次对抗扰动不再直接使用梯度方向，转而采用momentum方向，从而稳定更新方向并避免局部极值，更好提高攻击迁移性\",},\r\n                {name:\"NIFGSM\",description:\"NIFGSM算法：通过使用Nesterov Accelerated Gradient(NAG)到迭代梯度攻击方法中，由于NAG对之前累积的梯度进行修正，有助于有效地预测未来，从而使攻击更具有鲁棒性\",},\r\n                {name:\"PGDRS\",description:\"PGDRS算法：randmized smoothing是提高模型鲁棒性的一种高效方法，PGD for randmized smoothing则是争对这类randmized smoothing模型的pgd对抗攻击方法。攻击norm为linf\",}\r\n                ],\r\n                [\r\n                {name:\"PGDRSL2\",description:\"PGDRSL2算法：randmized smoothing是提高模型鲁棒性的一种高效方法，PGD for randmized smoothing则是争对这类randmized smoothing模型的pgd对抗攻击方法。攻击norm为l2\",},\r\n                {name:\"RFGSM\",description:\"RFGSM算法：R+FGSM在FGSM中加入随机的步骤, 是一个在白盒设置下高效的能替代迭代攻击的方法\",},\r\n                {name:\"SINIFGSM\",description:\"SINIFGSM算法：SCALE-INVARIANT NIFGSM通过使用模型放大的方法实现多模型的组合攻击，使得攻击避免在白盒设置下“过拟合”，从而生成更具有迁移性的对抗样本\",},\r\n                {name:\"SparseFool\",description:\"SparseFool算法：利用决策边界的低均值曲率计算对抗稀疏(sparse)扰动\",},\r\n                {name:\"SPSA\",description:\"SPSA算法：SPSA adversarial attack是一种黑盒攻击方法，使用SPSA方法近似loss对样本的梯度，利用迭代梯度更新方法生成对抗样本\",}\r\n                ],\r\n                [\r\n                {name:\"TIFGSM\",description:\"TIFGSM算法：Translation-Invarient FGSM将translation-invarient attack与FGSM结合，具体是将对抗目标调整为使像素平移后的对抗样本输出与真实标签的loss最大，同时使用卷积梯度的方法减小计算代价，使用该攻击方法拥有更强的迁移性\",},\r\n                {name:\"TPGD\",description:\"TPGD算法：基于KL-Divergence loss的pgd攻击\",},\r\n                {name:\"VMIFGSM\",description:\"VMIFGSM算法：variance tuning MIFGSM在MIFGSM方法上，不再直接使用当前计算的梯度做momentum累加，而是基于先前迭代下的梯度方差调整当前梯度\",},\r\n                {name:\"VNIFGSM\",description:\"VNIFGSM算法：variance tuning MIFGSM在NIFGSM方法上，不再直接使用当前计算的梯度做momentum累加，而是基于先前迭代下的梯度方差调整当前梯度\",},\r\n                ],\r\n                [\r\n                {name:\"AutoPGDL1\", description:\"\",},\r\n                {name:\"AutoPGDL2\", description:\"\",},\r\n                {name:\"AutoPGDLinf\", description:\"\",},\r\n                {name:\"Auto-CGL1\", description:\"\",}\r\n                ],\r\n                [\r\n                {name:\"Auto-CGL2\", description:\"\",},\r\n                {name:\"Auto-CGLinf\", description:\"\",},\r\n                \r\n                {name:\"ElasticNetL1\", description:\"\",},\r\n                {name:\"ElasticNetL2\", description:\"\",}\r\n                ],\r\n                [\r\n                {name:\"ElasticNet-EN\", description:\"\",},\r\n                {name:\"FeatureAdversaries\", description:\"\",},\r\n                {name:\"GRAPHITE\", description:\"\",},\r\n                {name:\"NewtonFool\", description:\"\",}\r\n                ],\r\n                [\r\n                {name:\"SpatialTransformation\", description:\"\",},\r\n                {name:\"TargetedUniversalPerturbationL2\", description:\"\",},\r\n                {name:\"TargetedUniversalPerturbationLinf\", description:\"\",},\r\n                ],\r\n                [\r\n                {name:\"BoundaryAttack\", description:\"\",},\r\n                {name:\"VirtualAdversarialMethod\", description:\"\",},\r\n                {name:\"SignOPTAttack\", description:\"\",},\r\n                ],\r\n            ],\r\n            selectedMethod:[\"FGSM\"],\r\n            selectedAttributes: {},\r\n            resultVisible: false,\r\n            postData:{},\r\n        }\r\n    },\r\n    watch: {\r\n        /* 判断弹框是否显示，如果true显示结果弹框，并且底层滚动取消*/\r\n        isShowPublish:{\r\n            immediate:true,\r\n            handler(v){\r\n                if(v){\r\n                    this.noScroll();\r\n                }else{\r\n                    this.canScroll();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        document.title = '对抗攻击评估';\r\n        },\r\n    methods: { \r\n        /* 关闭结果窗口 */\r\n        closeDialog(){\r\n            this.resultVisible=false;\r\n            //把绑定的弹窗数组 设为false即可关闭弹窗\r\n        },\r\n        updateMethod(index, checked){\r\n            if (checked == true){\r\n                this.selectedMethod.push(this.methodInfo[index].id)\r\n            }else{\r\n                this.selectedMethod.splice(this.selectedMethod.indexOf(this.methodInfo[index].id),1)\r\n            }\r\n            console.log(this.selectedMethod)\r\n        },\r\n        /* 获取结果 */ \r\n        getData(){\r\n            var that = this;\r\n            that.$axios.get('/output/Resultdata', {params:{ Taskid: that.tid }}).then((data)=>{\r\n                console.log(\"dataget:\",data);\r\n                that.result=data;\r\n            });\r\n        },\r\n        /* 获取日志 */ \r\n        getLog(){\r\n            debugger\r\n            var that = this;\r\n            if(that.percent < 99){\r\n               that.percent += 1;\r\n            }\r\n            that.$axios.get('/Task/QueryLog', { params: { Taskid: that.tid } }).then((data) => {\r\n                console.log(\"log:\",data)\r\n                if (JSON.stringify(that.stidlist)=='{}'){\r\n                    that.logtext = [Object.values(data.data.Log).slice(-1)[0]];\r\n                }else{\r\n                    that.logtext=[]\r\n                    for(let temp in that.stidlist){\r\n                        that.logtext.push(data.data.Log[that.stidlist[temp]]);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        /* 停止结果获取循环 */ \r\n        stopTimer() {\r\n            if (this.result.data.stop == 1) {\r\n                // 关闭日志显示\r\n                this.logflag = false;\r\n                // 关闭结果数据获取data\r\n                clearInterval(this.clk);\r\n                // 关闭日志获取结果获取\r\n                clearInterval(this.logclk);\r\n                                // 处理结果\r\n                this.result = this.result.data.result;\r\n                this.result[\"tid\"] = this.tid\r\n                this.result[\"stidlist\"] = this.stidlist\r\n                // 显示结果窗口\r\n                this.resultVisible = true\r\n\r\n            }else if(this.result.data.stop == 2){\r\n                this.percent=100\r\n                // 关闭结果数据获取data\r\n                clearInterval(this.clk);\r\n                this.clk=null\r\n                // 关闭日志获取结果获取\r\n                clearInterval(this.logclk);\r\n                this.logclk = null\r\n            }\r\n        },\r\n        /* 更新结果*/ \r\n        update(){\r\n            this.getData();\r\n            try{\r\n                this.stopTimer();\r\n            }catch(err){}\r\n        },\r\n        /* 点击评估触发事件 */\r\n        dataEvaClick() {\r\n            this.postData={}\r\n            let dataset = this.dataSetInfo[this.selectedDataset].name;\r\n            let model = this.modelInfo[this.selectedModel].name\r\n            if(this.selectedMethod.length == 0){\r\n                this.$message.warning('请至少选择一项对抗攻击方法！',3);\r\n                return\r\n            }\r\n            // 检查各个方法的参数\r\n            for(let i = 0; i < this.selectedMethod.length; i ++){\r\n                if (!(this.selectedMethod[i] in this.selectedAttributes)){\r\n                    let attributes_dict = {}\r\n                    let info =[]\r\n                    for( let methodnum = 0 ; methodnum < this.methodInfo.length; methodnum++){\r\n                        if (this.methodInfo[methodnum].id == this.selectedMethod[i]){\r\n                            info = this.methodInfo[methodnum].attributes\r\n                            break\r\n                        }\r\n                    }\r\n                    for(let i = 0; i < info.length; i++) {\r\n                        for(let j = 0; j < info[i].length; j++) {\r\n                            if ( info[i][j].type ==  \"selectgroup\"){\r\n                                attributes_dict[info[i][j].key] = info[i][j].valuelist[info[i][j].defaultNumber]\r\n                            }else{\r\n                                attributes_dict[info[i][j].key] = info[i][j].defaultNumber\r\n                            }\r\n                        }\r\n                    }\r\n                    this.postData[this.selectedMethod[i]] = attributes_dict\r\n                }else{\r\n                    this.postData[this.selectedMethod[i]] = this.selectedAttributes[this.selectedMethod[i]]\r\n                }\r\n            }\r\n            this.logtext = [];\r\n            this.logflag = true;\r\n            var that = this;\r\n            that.$axios.post(\"/Task/CreateTask\", { AttackAndDefenseTask: 0 }).then((result) => {\r\n                console.log(result);\r\n                that.tid = result.data.Taskid;\r\n                that.logclk = setInterval(() => {\r\n                        that.getLog();\r\n                    }, 6000)\r\n                /* 请求体 postdata*/\r\n                that.postData[\"Dataset\"] = dataset\r\n                that.postData[\"Model\"] = model\r\n                that.postData[\"Method\"] = JSON.stringify(that.selectedMethod)\r\n                that.postData[\"Taskid\"] = that.tid\r\n                console.log(that.postData)\r\n                that.$axios.post(\"/Attack/AdvAttack\", that.postData).then((res) => {\r\n                    that.stidlist =  {\"advattack\":res.data.stid};\r\n                    that.clk = setInterval(() => {\r\n                            that.update();\r\n                        }, 30000)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    clearInterval(that.logclk);\r\n                });\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            });\r\n        },\r\n        // 更换数据集\r\n        changeDataset(index) {\r\n            this.selectedDataset = index\r\n        },\r\n        // 更换模型\r\n        changeModel(index) {\r\n            this.selectedModel = index\r\n        },\r\n        // 更新方法参数\r\n        updataMethodAttributes(index, attributes_dict) {\r\n            this.selectedAttributes[this.methodInfo[index].id] = attributes_dict\r\n        },\r\n        // 防御方法点击选中\r\n        changeMethods(i, j) {\r\n            debugger;\r\n            let button = document.getElementById(\"button\" + i + j)\r\n            if (button.style.color == \"\") {\r\n                this.methodHoverIndex = i\r\n                this.methodDescription = this.methodInfoNoParam[i][j].description\r\n                button.style.color = \"#0B55F4\"\r\n                button.style.borderColor = \"#C8DCFB\"\r\n                button.style.background = \"#E7F0FD\"\r\n                this.selectedMethod.push(this.methodInfoNoParam[i][j].name)\r\n                this.selectedAttributes[this.methodInfoNoParam[i][j].name] = {}\r\n            } else {\r\n                this.methodHoverIndex = -1\r\n                this.methodDescription = \"\"\r\n                button.style.color = \"\"\r\n                button.style.borderColor = \"#C8DCFB\"\r\n                button.style.background = \"#F2F4F9\"\r\n                button.blur()\r\n                this.selectedMethod.splice(this.selectedMethod.indexOf(this.methodInfoNoParam[i][j].name), 1 )\r\n                delete this.selectedAttributes[this.methodInfoNoParam[i][j].name]\r\n            }\r\n        },\r\n    }\r\n}\r\n</script>\r\n<!-- <style  scoped> -->\r\n<style scoped>\r\n\r\n.paramCon{\r\n    width: 1200px;\r\n    margin-left: 360px;\r\n}\r\n.paramTitle{\r\n    height:80px;\r\n    padding: 20px 24px 20px 26px;\r\n    text-align: left;\r\n    width: 1200px;\r\n}\r\n\r\n.paramTitle h3{\r\n    /* height: 48px; */\r\n    display: inline;\r\n    margin-top: 38px;\r\n    width: 279px;\r\n    height: 36px;\r\n    font-family: 'HONOR Sans CN';\r\n    font-size: 24px;\r\n    color: #333333;\r\n    letter-spacing: 0;\r\n    line-height: 48px;\r\n    font-weight: 600;\r\n}\r\n/* 按钮样式 */\r\n.DataEva{\r\n    float: right;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 20px;\r\n    line-height: 20px;\r\n    padding: 0px 24px;\r\n    font-family: 'Microsoft YaHei';\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0px 24px;\r\n    gap: 4px;\r\n    width: 114px;\r\n    height: 40px;\r\n    background: #FFFFFF;\r\n    border-radius: 6px;\r\n}\r\n.denfenseMethod .ant-btn{\r\n    width: 100%;\r\n    background-color: #F2F4F9;\r\n    height:60px;\r\n    color:#000;\r\n    border:0px;\r\n    text-align: center;\r\n    font-family: HONOR Sans CN;\r\n    font-size: 20px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 28px; \r\n}\r\n.ant-divider-horizontal{\r\n    margin: 0 0;\r\n}\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/advAttack.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('a-layout',[_c('a-layout-header',[_c('navmodule')],1),_vm._v(\" \"),_c('a-layout-content',[_c('func_introduce',{attrs:{\"funcDesText\":_vm.funcDesText}}),_vm._v(\" \"),_c('div',{staticClass:\"paramCon\"},[_c('h2',{staticClass:\"subTitle\",staticStyle:{\"margin-top\":\"-96px\"}},[_vm._v(\"参数配置\")]),_vm._v(\" \"),_c('div',{staticClass:\"funcParam\"},[_c('div',{staticClass:\"paramTitle\"},[_c('img',{staticClass:\"paramIcom\",attrs:{\"src\":_vm.funcDesText.imgpath,\"alt\":_vm.funcDesText.name}}),_vm._v(\" \"),_c('h3',[_vm._v(_vm._s(_vm.funcDesText.name))]),_vm._v(\" \"),_c('a-button',{staticClass:\"DataEva\",style:(_vm.buttonBGColor),attrs:{\"disabled\":_vm.disStatus},on:{\"click\":_vm.dataEvaClick}},[_c('a-icon',{attrs:{\"type\":\"security-scan\"}}),_vm._v(\"\\n                           评估\\n                       \")],1)],1),_vm._v(\" \"),_c('a-divider'),_vm._v(\" \"),_c('div',{staticClass:\"inputdiv\"},[_c('div',{staticClass:\"mainParamNameNotop\"},[_vm._v(\"请选择数据集\")]),_vm._v(\" \"),_vm._l((_vm.dataSetInfo),function(info,index){return _c('DataSetCard',_vm._b({key:'Dataset' + index,staticStyle:{\"width\":\"1104px\",\"margin-bottom\":\"16px\"},attrs:{\"indexInParent\":index,\"checked\":index == _vm.selectedDataset},on:{\"selectDataset\":_vm.changeDataset}},'DataSetCard',info,false))}),_vm._v(\" \"),_c('div',{staticClass:\"mainParamName48\"},[_vm._v(\"请选择模型\")]),_vm._v(\" \"),_vm._l((_vm.modelInfo),function(info,index){return _c('ModelCard',_vm._b({key:'Model' + index,staticStyle:{\"width\":\"1104px\",\"margin-bottom\":\"16px\"},attrs:{\"indexInParent\":index,\"checked\":index == _vm.selectedModel},on:{\"selectModel\":_vm.changeModel}},'ModelCard',info,false))}),_vm._v(\" \"),_c('div',{staticClass:\"mainParamName48\"},[_vm._v(\"请选择攻击方法（可多选）\")]),_vm._v(\" \"),_vm._l((_vm.methodInfo),function(info,index){return _c('MethodCard',_vm._b({key:'Method' + index,staticStyle:{\"width\":\"1104px\"},attrs:{\"indexInParent\":index,\"attack_type\":'advAttack',\"dataset\":_vm.selectedDataset,\"checked\":_vm.selectedMethod.indexOf(_vm.methodInfo[index].id) > -1},on:{\"updateAttributes\":_vm.updataMethodAttributes,\"selectMethod\":_vm.updateMethod}},'MethodCard',info,false))}),_vm._v(\" \"),_vm._l((_vm.methodInfoNoParam),function(methods,i){return _c('div',{key:i,staticStyle:{\"margin-bottom\":\"16px\"}},[_c('a-row',{staticStyle:{\"height\":\"50px\"},attrs:{\"gutter\":16,\"type\":\"flex\"}},_vm._l((methods),function(method,j){return _c('a-col',{key:j,staticClass:\"denfenseMethod\",attrs:{\"flex\":24 / methods.length}},[_c('a-button',{attrs:{\"id\":'button' + i + j},on:{\"click\":function($event){return _vm.changeMethods(i,j)}}},[_vm._v(_vm._s(method.name))])],1)}),1),_vm._v(\" \"),(_vm.methodHoverIndex==i && _vm.methodDescription !== '')?_c('div',{staticStyle:{\"padding\":\"14px 24px\",\"margin-bottom\":\"16px\"}},[_vm._v(\" \"+_vm._s(_vm.methodDescription)+\" \")]):_vm._e()],1)}),_vm._v(\" \"),_c('AdvAttackEval',{attrs:{\"is-show\":_vm.resultVisible,\"result\":_vm.result,\"postData\":_vm.postData},on:{\"on-close\":function () { _vm.resultVisible = !_vm.resultVisible }}})],2)],1)]),_vm._v(\" \"),(_vm.logflag)?_c('div',[_c('showLog',{attrs:{\"percent\":_vm.percent,\"logtext\":_vm.logtext}})],1):_vm._e()],1),_vm._v(\" \"),_c('a-layout-footer',{staticClass:\"layoutFooter\"})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-43b78c95\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/advAttack.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-43b78c95\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./advAttack.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./advAttack.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./advAttack.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-43b78c95\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./advAttack.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-43b78c95\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/advAttack.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}