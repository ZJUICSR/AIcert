{"version":3,"sources":["webpack:///src/components/card/DefenseCard.vue","webpack:///./src/components/card/DefenseCard.vue?bd8f","webpack:///./src/components/card/DefenseCard.vue","webpack:///src/views/dialog/CrowdDefenseEval.vue","webpack:///./src/views/dialog/CrowdDefenseEval.vue?8f41","webpack:///./src/views/dialog/CrowdDefenseEval.vue","webpack:///src/views/crowdDefense.vue","webpack:///./src/views/crowdDefense.vue?f1f7","webpack:///./src/views/crowdDefense.vue","webpack:///./src/assets/img/crowdDefenseIcon.png","webpack:///./src/assets/img/NashBalanceImg.png","webpack:///./src/assets/img/PACAImg.png","webpack:///./src/assets/img/InterDefenseImg.png"],"names":["DefenseCard","props","name","default","src","__webpack_require__","checked","indexInParent","methods","selectedDefense","this","$emit","card_DefenseCard","render","_vm","_h","$createElement","_c","_self","staticStyle","width","attrs","on","click","_v","_s","staticClass","_e","staticRenderFns","components_card_DefenseCard","normalizeComponent","ssrContext","CrowdDefenseEval","components","PictureTable","isShow","type","Boolean","required","result","postData","widNum","Number","leftSite","topDistance","pdt","pdb","data","htmlTitle","res","Dataset","Model","selectPicList","watch","newValue","oldValue","updated","closeMyself","_stopPropagation","ev","stopPropagation","defenseShow","method","arguments","length","undefined","JSON","parse","join","temp","labels","maxasr","maxmethod","ASRlist","timelist","maxtime","mintime","maxtimemethod","mintimemethod","adv_attack","indexOf","asr","toFixed","time","push","bef_dirname","pic","split","adv_dirname","per_dirname","methodstr","Method","score","Eva","option","xAxis","tooltip","trigger","axisPointer","formatter","yAxis","axisLabel","min","max","series","setTimeout","myChart","echarts","document","getElementById","setOption","option2","timechart","dialog_CrowdDefenseEval","$event","font-size","color","_t","height","id","background","padding","span","Defense","margin-bottom","margin-top","background-color","border-radius","getPdf","views_dialog_CrowdDefenseEval","CrowdDefenseEval_normalizeComponent","selectSvg","template","selectIcon","crowdDefense","navmodule","nav","func_introduce","funcIntroduce","showLog","resultDialog","DataSetCard","ModelCard","MethodCard","radioStyle","display","lineHeight","buttonBGColor","disStatus","logflag","percent","logtext","funcDesText","imgpath","crowdDefenseIcon_default","a","bgimg","modelEvaBackground_default","destext","backinfo","highlight","tid","stidlist","clk","logclk","dataSetInfo","class","description","pictureSrcs","selectedDataset","modelInfo","layer","selectedModel","methodInfo","attributes","key","defaultNumber","number","step","valuelist","DefenseInfo","selectedMethod","selectedAttributes","resultVisible","isShowPublish","immediate","handler","v","noScroll","canScroll","created","title","closeDialog","updateMethod","index","splice","console","log","updateDefense","getData","that","$axios","get","params","Taskid","then","getLog","stringify_default","values_default","Log","slice","stopTimer","stop","clearInterval","update","err","dataEvaClick","dataset","model","i","attributes_dict","info","methodnum","_i","j","post","AttackAndDefenseTask","setInterval","advattack","stid","catch","$message","warning","changeDataset","changeModel","updataMethodAttributes","changeDefense","changeMethods","button","style","borderColor","methodInfoNoParam","blur","views_crowdDefense","alt","disabled","_l","_b","selectDataset","selectModel","attack_type","updateAttributes","selectMethod","is-show","on-close","crowdDefense_Component","crowdDefense_normalizeComponent","__webpack_exports__","module","exports","p"],"mappings":"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","file":"static/js/8.d70a20afc12a9f0e3366.js","sourcesContent":["<template>\n  <div>\n    <!-- 按钮 -->\n    <a-radio style=\"width: 100%;\" :checked=\"checked\" @click=\"selectedDefense\">{{ name }}</a-radio>\n    <div v-if=\"checked\" class=\"describe_con\"> <!-- 只有在被选中的时候才会打印信息 -->\n      <img style=\"width: fit-content; \" :src=\"src\">\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props : {\n    name: {\n      default: \"Nash博弈\"\n    },\n    src: {\n      default: require('../../assets/img/NashBalanceImg.png')\n    },\n    checked: {\n      default: true\n    },\n    indexInParent: 0,\n  },\n  methods: {\n    selectedDefense: function() {\n      this.$emit(\"selectedDefense\", this.indexInParent, !this.checked)\n    }\n  }\n}\n</script> \n\n<style scoped>\n.describe_con{\n  display: flex;\n  padding: 24px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 24px;\n  align-self: stretch;\n}\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/card/DefenseCard.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('a-radio',{staticStyle:{\"width\":\"100%\"},attrs:{\"checked\":_vm.checked},on:{\"click\":_vm.selectedDefense}},[_vm._v(_vm._s(_vm.name))]),_vm._v(\" \"),(_vm.checked)?_c('div',{staticClass:\"describe_con\"},[_c('img',{staticStyle:{\"width\":\"fit-content\"},attrs:{\"src\":_vm.src}})]):_vm._e()],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-70dd3fca\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/card/DefenseCard.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-70dd3fca\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./DefenseCard.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DefenseCard.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DefenseCard.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-70dd3fca\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./DefenseCard.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-70dd3fca\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/card/DefenseCard.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"dialog\">\n      <!--外层的遮罩 点击事件用来关闭弹窗，isShow控制弹窗显示 隐藏的props-->\n      <div class=\"dialog-cover back\"  v-if=\"isShow\" @click=\"closeMyself\"></div>\n      <!-- transition 这里可以加一些简单的动画效果 -->\n      <transition name=\"drop\">\n          <!--style 通过props 控制内容的样式 -->\n          <div class=\"dialog-content\" v-if=\"isShow\" @click.stop=\"_stopPropagation($event)\">\n              <div class=\"dialog_head back\">\n                  <!--弹窗头部 title-->\n                  <div class=\"close_button\">\n                      <a-icon type=\"close\" @click=\"closeMyself\" style=\"font-size: 20px;color:#6C7385;\" class=\"closebutton\"/>\n                  </div>\n                  <slot name=\"header\">\n                    <div class=\"dialog-title\"><img src=\"../../assets/img/crowdDefenseIcon.png\" style=\"width: 50px; height: 50px;\">模型群智化防御</div>\n                  </slot>\n              </div>\n              <div class=\"dialog_main\" id=\"pdfDom\" >\n              <!--弹窗的内容-->\n                  <slot name=\"main\">\n                    <!-- 攻击信息 -->\n                    <!-- <div v-if=\"Object.keys(postData).length > 0\" style=\"background: var(--gray-7, #F2F4F9);;width: 100%;padding: 24px;\"> -->\n                    <div  style=\"background: var(--gray-7, #F2F4F9);;width: 100%;padding: 24px;\">\n                      <a-row >\n                        <a-col :span=\"2\">\n                          <div class=\"grid-content-name\" style=\"color:#6C7385\">数据集:</div>\n        \n                        </a-col>\n                        <a-col :span=\"5\">\n                          <div class=\"grid-content-value\">{{postData.Dataset}}</div>\n\n                        </a-col>\n                        <a-col :span=\"2\">\n                          <div class=\"grid-content-name\" style=\"color:#6C7385\">模型:</div>\n\n                        </a-col>\n                        <a-col :span=\"5\">\n                          <div class=\"grid-content-value\">{{postData.Model}}</div>\n \n                        </a-col>\n                        <a-col :span=\"2\">\n                          <div class=\"grid-content-name\" style=\"color:#6C7385\">攻击方法:</div>\n     \n                        </a-col>\n                        <a-col :span=\"8\">\n                          <div class=\"grid-content-value\">{{defenseShow(postData.Method)}}</div>\n                        </a-col>\n                        <a-col :span=\"2\">\n                          <div class=\"grid-content-name\" style=\"color:#6C7385\">群智化防御方法:</div>\n     \n                        </a-col>\n                        <a-col :span=\"8\">\n                          <div class=\"grid-content-value\">{{ defenseShow(postData.Defense) }}</div>\n                        </a-col>\n                      </a-row>\n                    </div>\n                    <!-- Nash博弈结果 -->\n                    <div > \n                      <div class=\"result-title\">准确率收益直方图</div>\n                      <div id=\"acc_Chart\" class=\"echart\" style=\"width: 1000px; height: 400px;\"></div>\n                      <!-- <div class=\"conclusion\">\n                        <p class=\"result_text \">从结果中可以看到，在测试的几种攻击中，其中攻击效果最佳的为{{res.maxmethod}}，攻击成功率为{{res.maxasr}},{{ res.mintimemethod }}所花费的时间最少，而{{ res.maxtimemethod }}类攻击所花费的时间最多，但是其达到的准确率也较高</p>\n                      </div> -->\n                      <div class=\"result-title\">鲁棒性收益矩阵</div>\n                      <div id=\"rob_Chart\" class=\"echart\" style=\"width: 1000px; height: 400px;\"></div>\n                      <!-- <div class=\"conclusion\">\n                        <p class=\"result_text \">从结果中可以看到，在测试的几种攻击中，其中攻击效果最佳的为{{res.maxmethod}}，攻击成功率为{{res.maxasr}},{{ res.mintimemethod }}所花费的时间最少，而{{ res.maxtimemethod }}类攻击所花费的时间最多，但是其达到的准确率也较高</p>\n                      </div> -->\n                      <div class=\"result-title\">博弈策略收益曲线</div>\n                      <div id=\"bal_Chart\" class=\"echart\" style=\"width: 1000px; height: 400px;\"></div>\n                      <div class=\"conclusion\">\n                        <p class=\"result_text \">Nash博弈结论</p>\n                      </div>\n                    </div>\n                    <!-- 评估详情 -->\n                    <div class=\"result-title\">防御模型在各种攻击下的准确率变化</div>\n                    <div>\n                      <!-- 待修改：柱状图 -->\n                      <div id=\"myChart\" class=\"echart\" style=\"width: 1000px; height: 400px;\"></div>\n                      <div class=\"conclusion\">\n                        <p class=\"result_text \">集成防御与自动化攻击检测PACA解释</p>\n                      </div>\n                    </div>\n                    <a-button @click=\"getPdf()\" style=\"width:160px;height:40px;margin-bottom:30px;margin-top:10px;\n                    font-size:18px;color:white;background-color:rgb(46, 56, 245);border-radius:8px;\">\n                      <a-icon type=\"upload\" />导出报告内容\n                    </a-button>\n                  </slot>\n              </div>\n          </div>\n      </transition>\n  </div>\n</template>\n<script>\nimport * as echarts from \"echarts\";\nimport PictureTable from \"../../components/pictureTable.vue\";\nexport default {\n  name:\"resultDialog\",\n  components: {\n    PictureTable: PictureTable\n  },\n  props: {\n      isShow: {\n      //弹窗组件是否显示 默认不显示\n      type: Boolean,\n      default: false,\n      required:true, //必须\n      },\n      result:{},\n      postData:{\n\n      },\n      //下面这些属性会绑定到div上面 详情参照上面的html结构\n      // 如： :style=\"{top:topDistance+'%',width:widNum+'%'}\"\n      widNum:{\n      //内容宽度\n      type: Number,\n      default:50\n      },\n      leftSite:{\n      // 左定位\n      type: Number,\n      default:25.2\n      },\n      topDistance: {\n      //top上边距\n      type: Number,\n      default:10\n      },\n      pdt:{\n      //上padding\n      type: Number,\n      default:22\n      },\n      pdb:{\n      //下padding\n      type: Number,\n      default:47\n      }\n      },\n      \n  data() {\n    return {\n      htmlTitle:\"群智化防御报告\",\n      res:{},\n      postData:{\n        // 静态结果\n        \"Dataset\": \"MNIST\",\n        \"Model\": \"ResNet34\",\n        \n\n      },\n      selectPicList: [\n        [\"攻击方法\", \"加噪前\", \"噪声\", \"加噪后\"],\n        ]\n    }\n  },\n  watch:{\n    result(newValue, oldValue){\n      if (\"adv_attack\" in newValue){\n\n        this.updated()\n      }\n    }\n    \n  },\n  // props:[\"is-show\",\"top-distance\"],\n  methods: {\n      closeMyself() {\n        this.$emit(\"on-close\");\n        //如果需要传参的话，可以在\"on-close\"后面再加参数，然后在父组件的函数里接收就可以了。\n      },\n      _stopPropagation(ev){\n          var _this = this;\n          ev.stopPropagation();\n      },\n      // 防御方法参数显示-\n      defenseShow(method=\"[]\"){\n            let param = JSON.parse(method);\n            return param.join('、');\n        },\n      updated(){\n        //code\n        this.res.labels = [];\n        this.res.maxasr = 0\n        this.res.maxmethod = \"\"\n        this.res.ASRlist = []\n        this.res.timelist = []\n        this.res.maxtime = 0\n        this.res.mintime = 100\n        this.res.maxtimemethod = \"\"\n        this.res.mintimemethod = \"\"\n        this.res.timelist = []\n        for(let temp in this.result.adv_attack){\n          if( [\"stop\",\"tid\", \"stidlist\"] .indexOf(temp) == -1){\n            if (this.res.maxasr < this.result.adv_attack[temp].asr){\n              this.res.maxasr = this.result.adv_attack[temp].asr.toFixed(2)\n              this.res.maxmethod = temp\n            }\n            if (this.res.maxtime < this.result.adv_attack[temp].time){\n              this.res.maxtime = this.result.adv_attack[temp].time\n              this.res.maxtimemethod = temp\n            }\n            if (this.res.mintime > this.result.adv_attack[temp].time){\n              this.res.mintime = this.result.adv_attack[temp].time\n              this.res.mintimemethod = temp\n            }\n            this.res.labels.push(temp)\n            this.res.ASRlist.push(this.result.adv_attack[temp].asr.toFixed(2))\n            this.res.timelist.push(this.result.adv_attack[temp].time.toFixed(4))\n            let bef_dirname = './static/output'+this.result.adv_attack[temp].pic[0].split(\"output\")[1]\n            let adv_dirname = './static/output'+this.result.adv_attack[temp].pic[1].split(\"output\")[1]\n            let per_dirname = './static/output'+this.result.adv_attack[temp].pic[2].split(\"output\")[1]\n            this.selectPicList.push([temp, [[`${bef_dirname}`], \"pic\"], [[`${per_dirname}`], \"pic\"],[[`${adv_dirname}`], \"pic\"]])\n          }\n        }\n        this.res[\"score\"] = 100-this.res.maxasr\n        if(this.res[\"score\"] >= 80 ){\n          this.res[\"Eva\"] = \"优秀\"\n        }else if (this.res[\"score\"] <80 && this.res[\"score\"] >=60 ){\n          this.res[\"Eva\"] = \"良好\"\n        }else{\n          this.res[\"Eva\"] = \"差\"\n        }\n        let methodstr = this.defenseShow(this.postData.Method)\n        this.res[\"score_des\"] = `${this.postData.Model}模型鲁棒性得分为${this.res.score}，是一个较${this.res.Eva}的模型，本次对抗攻击方法有${methodstr}，其中${this.res.maxmethod}的攻击效果最佳`\n        let option = {\n          xAxis: {\n            type: 'category',\n            name:\"算法名称\",\n            data: this.res.labels\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            },\n            formatter: '{c}%'\n          },\n          yAxis: {\n            name:\"攻击成功率\",\n            type: 'value',\n            axisLabel: {\n              formatter: '{value} %'\n            },\n            min:0,\n            max:100,\n          },\n          series: [\n            {\n              data: this.res.ASRlist,\n              type: 'bar'\n            }\n          ]\n        }\n        \n        setTimeout(function(){let myChart = echarts.init(document.getElementById(\"myChart\"));\n          option && myChart.setOption(option);\n        },500)\n\n        \n        let option2 = {\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            },\n            formatter: '{c}s'\n          },\n          xAxis: {\n            name:\"算法名称\",\n            type: 'category',\n            data: this.res.labels\n          },\n          yAxis: {\n            name:\"运行时间（单位：s）\",\n            type: 'value'\n          },\n          series: [\n            {\n              data: this.res.timelist,\n              type: 'bar'\n            }\n          ]\n        }\n        setTimeout(function(){\n          let timechart = echarts.init(document.getElementById(\"timeChart\"));\n          option2 && timechart.setOption(option2);\n        },500)\n      }\n    }\n  }\n  \n\n</script>\n\n<style scoped>\n/* 最外层 设置position定位 */\n.dialog {\nposition: relative;\ncolor: #e7e5e6;\nfont-size: 16px;\n}\n/* 遮罩 设置背景层，z-index值要足够大确保能覆盖，高度 宽度设置满 做到全屏遮罩 */\n.dialog-cover {\nbackground: rgba(68, 68, 68, 0.8);\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\n}\n.close_button{\n  height: 40px;\n  width: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n}\n/* 内容层 z-index要比遮罩大，否则会被遮盖， */\n.dialog-content{\nposition: fixed;\ntop: 10px;\nwidth: 1080px;\nleft: 420px;\nbottom: 5px;\n/* 移动端使用felx布局 */\ndisplay: flex;\nflex-direction: column;\njustify-content: start;\nalign-items: center;\nz-index: 2001;\ncolor: rgb(0, 0, 0);\noverflow: scroll;\nbackground: #FFFFFF;\nbox-shadow: 0px 8px 20px rgba(44, 51, 67, 0.06);\nborder-radius: 8px;\n}\n/* 标题框样式 */\n.dialog_head{\n  width: 1080px;\n  left: 0px;\n  top: 1px;\n  height: 88px;\n  padding: 24px 18px 24px 24px;\n  border-bottom: 1px solid #E0E3EB;\n}\n\n.dialog_main{\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0px;\n  /* gap: 60px; */\n\n  position: absolute;\n  width: 1080px;\n  /* height: 8265px; */\n  left: 0px;\n  top: 89px;\n\n}\n.foot_close{\n  background: #5196FF;\n  border-radius: 4px;\n  width: 143px;\n  height: 50px;\n}\n.dialog-title{\n  display: inline;\n  margin-top: 38px;\n  width: 279px;\n  height: 36px;\n  font-family: 'HONOR Sans CN';\n  font-size: 24px;\n  color: #333333;\n  letter-spacing: 0;\n  line-height: 48px;\n  font-weight: 600;\n}\n.result-title {\n  margin-top: 30px;\n  font-family: 'HONOR Sans CN';\n  font-size: 28px;\n  color: #000;\n  letter-spacing: 0;\n  font-weight: 700;\n  text-align: center;\n}\n.describe {\n  font-family: 'HONOR Sans CN';\n  font-size: 16px;\n  color: #000000;\n  letter-spacing: 0;\n  text-align: center;\n}\n.result-subtitle {\n  margin-top: 20px;\n  color: var(--light-fontgray-4-title, rgba(0, 0, 0, 0.90));\n  text-align: center;\n  font-family: HONOR Sans CN;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 28px;\n}\n\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/dialog/CrowdDefenseEval.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dialog\"},[(_vm.isShow)?_c('div',{staticClass:\"dialog-cover back\",on:{\"click\":_vm.closeMyself}}):_vm._e(),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"drop\"}},[(_vm.isShow)?_c('div',{staticClass:\"dialog-content\",on:{\"click\":function($event){$event.stopPropagation();return _vm._stopPropagation($event)}}},[_c('div',{staticClass:\"dialog_head back\"},[_c('div',{staticClass:\"close_button\"},[_c('a-icon',{staticClass:\"closebutton\",staticStyle:{\"font-size\":\"20px\",\"color\":\"#6C7385\"},attrs:{\"type\":\"close\"},on:{\"click\":_vm.closeMyself}})],1),_vm._v(\" \"),_vm._t(\"header\",function(){return [_c('div',{staticClass:\"dialog-title\"},[_c('img',{staticStyle:{\"width\":\"50px\",\"height\":\"50px\"},attrs:{\"src\":require(\"../../assets/img/crowdDefenseIcon.png\")}}),_vm._v(\"模型群智化防御\")])]})],2),_vm._v(\" \"),_c('div',{staticClass:\"dialog_main\",attrs:{\"id\":\"pdfDom\"}},[_vm._t(\"main\",function(){return [_c('div',{staticStyle:{\"background\":\"var(--gray-7, #F2F4F9)\",\"width\":\"100%\",\"padding\":\"24px\"}},[_c('a-row',[_c('a-col',{attrs:{\"span\":2}},[_c('div',{staticClass:\"grid-content-name\",staticStyle:{\"color\":\"#6C7385\"}},[_vm._v(\"数据集:\")])]),_vm._v(\" \"),_c('a-col',{attrs:{\"span\":5}},[_c('div',{staticClass:\"grid-content-value\"},[_vm._v(_vm._s(_vm.postData.Dataset))])]),_vm._v(\" \"),_c('a-col',{attrs:{\"span\":2}},[_c('div',{staticClass:\"grid-content-name\",staticStyle:{\"color\":\"#6C7385\"}},[_vm._v(\"模型:\")])]),_vm._v(\" \"),_c('a-col',{attrs:{\"span\":5}},[_c('div',{staticClass:\"grid-content-value\"},[_vm._v(_vm._s(_vm.postData.Model))])]),_vm._v(\" \"),_c('a-col',{attrs:{\"span\":2}},[_c('div',{staticClass:\"grid-content-name\",staticStyle:{\"color\":\"#6C7385\"}},[_vm._v(\"攻击方法:\")])]),_vm._v(\" \"),_c('a-col',{attrs:{\"span\":8}},[_c('div',{staticClass:\"grid-content-value\"},[_vm._v(_vm._s(_vm.defenseShow(_vm.postData.Method)))])]),_vm._v(\" \"),_c('a-col',{attrs:{\"span\":2}},[_c('div',{staticClass:\"grid-content-name\",staticStyle:{\"color\":\"#6C7385\"}},[_vm._v(\"群智化防御方法:\")])]),_vm._v(\" \"),_c('a-col',{attrs:{\"span\":8}},[_c('div',{staticClass:\"grid-content-value\"},[_vm._v(_vm._s(_vm.defenseShow(_vm.postData.Defense)))])])],1)],1),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"result-title\"},[_vm._v(\"准确率收益直方图\")]),_vm._v(\" \"),_c('div',{staticClass:\"echart\",staticStyle:{\"width\":\"1000px\",\"height\":\"400px\"},attrs:{\"id\":\"acc_Chart\"}}),_vm._v(\" \"),_c('div',{staticClass:\"result-title\"},[_vm._v(\"鲁棒性收益矩阵\")]),_vm._v(\" \"),_c('div',{staticClass:\"echart\",staticStyle:{\"width\":\"1000px\",\"height\":\"400px\"},attrs:{\"id\":\"rob_Chart\"}}),_vm._v(\" \"),_c('div',{staticClass:\"result-title\"},[_vm._v(\"博弈策略收益曲线\")]),_vm._v(\" \"),_c('div',{staticClass:\"echart\",staticStyle:{\"width\":\"1000px\",\"height\":\"400px\"},attrs:{\"id\":\"bal_Chart\"}}),_vm._v(\" \"),_c('div',{staticClass:\"conclusion\"},[_c('p',{staticClass:\"result_text\"},[_vm._v(\"Nash博弈结论\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"result-title\"},[_vm._v(\"防御模型在各种攻击下的准确率变化\")]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"echart\",staticStyle:{\"width\":\"1000px\",\"height\":\"400px\"},attrs:{\"id\":\"myChart\"}}),_vm._v(\" \"),_c('div',{staticClass:\"conclusion\"},[_c('p',{staticClass:\"result_text\"},[_vm._v(\"集成防御与自动化攻击检测PACA解释\")])])]),_vm._v(\" \"),_c('a-button',{staticStyle:{\"width\":\"160px\",\"height\":\"40px\",\"margin-bottom\":\"30px\",\"margin-top\":\"10px\",\"font-size\":\"18px\",\"color\":\"white\",\"background-color\":\"rgb(46, 56, 245)\",\"border-radius\":\"8px\"},on:{\"click\":function($event){return _vm.getPdf()}}},[_c('a-icon',{attrs:{\"type\":\"upload\"}}),_vm._v(\"导出报告内容\\n                  \")],1)]})],2)]):_vm._e()])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2c47ac4e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/dialog/CrowdDefenseEval.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2c47ac4e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./CrowdDefenseEval.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CrowdDefenseEval.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CrowdDefenseEval.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2c47ac4e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./CrowdDefenseEval.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2c47ac4e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/dialog/CrowdDefenseEval.vue\n// module id = null\n// module chunks = ","<template>\r\n     <div>\r\n        <a-layout>\r\n            <!-- 顶部菜单栏 -->\r\n            <a-layout-header>\r\n                <!-- 导航栏 -->\r\n                <navmodule />\r\n            </a-layout-header>\r\n            <a-layout-content>\r\n                <!-- 功能介绍 -->\r\n                <func_introduce :funcDesText=\"funcDesText\"></func_introduce>\r\n                <!-- 参数配置 -->\r\n                <div class=\"paramCon\">\r\n                    <!-- 参数配置容器 -->\r\n                    <h2 class=\"subTitle\" style=\"margin-top: -96px;\">参数配置</h2>\r\n\r\n                    <div class=\"funcParam\">\r\n                        <div class=\"paramTitle\">\r\n                            <!-- 功能标题和执行按钮 -->\r\n                            <!-- icon展示 -->\r\n                            <img class=\"paramIcom\" :src=\"funcDesText.imgpath\" :alt=\"funcDesText.name\">\r\n                            <!-- 功能名称 -->\r\n                            <h3>{{ funcDesText.name }}</h3>\r\n                            <a-button class=\"DataEva\" @click=\"dataEvaClick\" :style=\"buttonBGColor\" :disabled=\"disStatus\">\r\n                                <a-icon type=\"security-scan\" />\r\n                                评估\r\n                            </a-button>\r\n                        </div>\r\n                        <a-divider />\r\n                        <div class=\"inputdiv\">\r\n                            <!-- 输入主体 -->\r\n                            <div class=\"mainParamNameNotop\">请选择数据集</div>\r\n                            <DataSetCard style=\"width: 1104px; margin-bottom: 16px;\" v-for=\"(info, index) in dataSetInfo\"\r\n                                :key=\"'Dataset' + index\" v-bind=\"info\" :indexInParent=\"index\" @selectDataset=\"changeDataset\"\r\n                                :checked=\"index == selectedDataset\">\r\n                            </DataSetCard>\r\n                            <div class=\"mainParamName48\">请选择模型</div>\r\n                            <ModelCard style=\"width: 1104px; margin-bottom: 16px;\" v-for=\"(info, index) in modelInfo\" :key=\"'Model' + index\"\r\n                                v-bind=\"info\" :indexInParent=\"index\" @selectModel=\"changeModel\"\r\n                                :checked=\"index == selectedModel\">\r\n                            </ModelCard>\r\n                            <div class=\"mainParamName48\">请选择攻击方法（可多选）</div>\r\n                            <MethodCard style=\"width: 1104px; \" v-for=\"(info, index) in methodInfo\" :key=\"'Method' + index\"\r\n                                v-bind=\"info\" :indexInParent=\"index\" :attack_type=\"'advAttack'\" :dataset=\"selectedDataset\" @updateAttributes=\"updataMethodAttributes\" \r\n                                @selectMethod=\"updateMethod\" :checked=\"selectedMethod.indexOf(methodInfo[index].id) > -1\">\r\n                            </MethodCard>\r\n                            <div class=\"mainParamName48\">请选择群智化防御方法（可多选）</div>\r\n                            <DefenseCard style=\"width: 1104px; \" v-for=\"(info, index) in DefenseInfo\"\r\n                                :key=\"'Defense' + index\" v-bind=\"info\" :indexInParent=\"index\" @selectedDefense=\"updateDefense\"\r\n                                :checked=\"selectedDefense.indexOf(DefenseInfo[index].id) > -1\"> \r\n                            </DefenseCard>\r\n                            <CrowdDefenseEval :is-show=\"resultVisible\" :result=\"result\" :postData=\"postData\" @on-close=\"() => { resultVisible = !resultVisible }\">\r\n                            </CrowdDefenseEval>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- 日志展示 -->\r\n                <div v-if=\"logflag\">\r\n                    <showLog :percent=\"percent\" :logtext=\"logtext\"></showLog>\r\n                </div>\r\n            </a-layout-content>\r\n            <a-layout-footer class=\"layoutFooter\">\r\n\r\n            </a-layout-footer>\r\n        </a-layout>\r\n     </div>\r\n</template>\r\n<script>\r\n/* 引入组件，导航栏 */\r\nimport navmodule from \"../components/nav.vue\";\r\n/* 引入组件，功能介绍 */\r\nimport func_introduce from \"../components/funcIntroduce.vue\"\r\n/* 引入组件，日志显示 */\r\nimport showLog from \"../components/showLog.vue\"\r\n/* 引入组件，结果显示 */\r\nimport resultDialog from \"../components/resultDialog.vue\"\r\n\r\nimport funcicon from \"../assets/img/crowdDefenseIcon.png\"\r\nimport bgimg from \"../assets/img/modelEvaBackground.png\"\r\n\r\nimport DataSetCard from \"../components/card/DataSetCard.vue\"\r\nimport ModelCard from \"../components/card/ModelCard.vue\"\r\nimport MethodCard from \"../components/card/MethodCard.vue\"\r\nimport DefenseCard from \"../components/card/DefenseCard.vue\"\r\nimport CrowdDefenseEval from \"./dialog/CrowdDefenseEval.vue\"\r\n\r\nconst selectSvg = {\r\n        template:`\r\n        <svg t=\"1680138013828\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4354\" width=\"128\" height=\"128\"><path d=\"M534.869333 490.496a1403.306667 1403.306667 0 0 0 50.858667-25.813333c16.042667-8.618667 29.013333-15.061333 38.570667-19.029334 9.557333-3.925333 17.066667-6.058667 22.869333-6.058666 9.557333 0 17.749333 3.2 24.917333 10.026666 6.826667 6.826667 10.581333 15.061333 10.581334 25.088 0 5.76-1.706667 11.818667-5.12 17.92-3.413333 6.101333-7.168 10.069333-10.922667 11.861334-35.157333 14.677333-74.410667 25.429333-116.736 31.872 7.850667 7.168 17.066667 17.237333 28.330667 29.781333 11.264 12.544 17.066667 18.986667 17.749333 20.053333 4.096 6.101333 9.898667 13.653333 17.408 22.613334 7.509333 8.96 12.629333 15.786667 15.36 20.778666 2.730667 5.034667 4.437333 11.093333 4.437333 18.304a33.706667 33.706667 0 0 1-9.898666 24.021334 33.834667 33.834667 0 0 1-25.6 10.410666c-10.24 0-22.186667-8.618667-35.157334-25.472-12.970667-16.512-30.037333-46.933333-50.517333-91.050666-20.821333 39.424-34.816 65.962667-41.642667 78.506666-7.168 12.544-13.994667 22.186667-20.48 28.672a30.976 30.976 0 0 1-22.528 9.685334 32.256 32.256 0 0 1-25.258666-11.093334 35.413333 35.413333 0 0 1-9.898667-23.68c0-7.893333 1.365333-13.653333 4.096-17.578666 25.258667-35.84 51.541333-67.413333 78.848-93.568a756.650667 756.650667 0 0 1-61.44-12.544 383.061333 383.061333 0 0 1-57.685333-20.48c-3.413333-1.749333-6.485333-5.717333-9.557334-11.818667a30.208 30.208 0 0 1-5.12-16.853333 32.426667 32.426667 0 0 1 10.581334-25.088 33.152 33.152 0 0 1 24.234666-10.026667c6.485333 0 14.677333 2.133333 24.576 6.101333 9.898667 4.266667 22.186667 10.026667 37.546667 18.261334 15.36 7.893333 32.426667 16.853333 51.882667 26.538666-3.413333-18.261333-6.485333-39.082667-8.874667-62.378666-2.389333-23.296-3.413333-39.424-3.413333-48.042667 0-10.752 3.072-19.712 9.557333-27.264A30.677333 30.677333 0 0 1 512.341333 341.333333c9.898667 0 18.090667 3.925333 24.576 11.477334 6.485333 7.893333 9.557333 17.92 9.557334 30.464 0 3.584-0.682667 10.410667-1.365334 20.48-0.682667 10.368-2.389333 22.570667-4.096 36.906666-2.048 14.677333-4.096 31.146667-6.144 49.834667z\" fill=\"#FF3838\" p-id=\"4355\"></path></svg>\r\n        `,\r\n    };\r\n    const selectIcon = {\r\n        template: `\r\n            <a-icon :component=\"selectSvg\" />\r\n        `,\r\n        data() {\r\n            return {\r\n                selectSvg,\r\n            };\r\n        },\r\n    }\r\nexport default {\r\n    name:\"advAttack\",\r\n    components:{\r\n        /* 注册组件 */\r\n        navmodule:navmodule,\r\n        func_introduce:func_introduce,\r\n        showLog:showLog,\r\n        resultDialog:resultDialog,\r\n        selectIcon,\r\n        DataSetCard,\r\n        ModelCard,\r\n        MethodCard,\r\n        DefenseCard,\r\n        CrowdDefenseEval,\r\n    },\r\n    data(){\r\n        return{\r\n            \r\n            /* 单选按钮样式 */\r\n            radioStyle: {\r\n                display: 'block',\r\n                lineHeight: '30px',\r\n            },\r\n            /* 评估按钮样式和状态 */\r\n            buttonBGColor:{\r\n                background:\"#0B55F4\",\r\n                color:\"#FFFFFF\"\r\n            },\r\n            // 按钮是否置灰\r\n            disStatus:false,\r\n            /* 日志框是否显示，false不显示，true显示，默认不显示 */\r\n            logflag:false,\r\n            /* 进度 */\r\n            percent:10,\r\n            /* 日志内容，调用日志接口获取 */\r\n            logtext:[],\r\n            /* 功能介绍模块信息 */\r\n            funcDesText:{\r\n                /* 功能名称 */\r\n                name: \"群智化防御\",\r\n                /* 功能icon，需先引入 */\r\n                imgpath:funcicon,\r\n                /* 功能背景图片，需先引入 */\r\n                bgimg:bgimg,\r\n                /* 功能介绍下的总介绍 */\r\n                destext:\"实现基于群体智能的模型全生命周期动态防御\",\r\n                /* 背景介绍 */\r\n                backinfo:\"针对AI模型保护机制设计孤立、覆盖环节有限、防御策略固定等特点，突破防御智能体功能设计、智能体结构设计、智能体博弈机制、群体智能防御算法等关键技术，实现基于群体智能的模型全生命周期动态防御。\",\r\n                /* 亮点介绍 */\r\n                highlight:[\r\n                    \"具备自动攻击检测、脆弱感知、异常过滤、算法加固的能力；\",\r\n                    \"内置支持协同与博弈方法≥5种，包括Nash博弈、集成防御、xxxx、xxxxx、xxxxx，实现PACA自动攻击检测；\",\r\n                    \"可防御的攻击算法包含FGSM等超过20种对抗攻击算法，防御成功率超过90%。\"\r\n                ]\r\n            },\r\n            /* 评估结果 */\r\n            result:{},\r\n            /* 主任务id */ \r\n            tid:\"\",\r\n            /* 子任务id */ \r\n            stidlist:{},\r\n            /* 异步任务结果查循环clock */\r\n            clk:\"\",\r\n            /* 日志查询clock*/\r\n            logclk: \"\",\r\n            // 数据集信息\r\n            dataSetInfo: [\r\n            {\r\n                name: \"CIFAR10\",\r\n                class:['airplane','automobile','bird','cat','deer','dog','frog','horse','ship','truck'],\r\n                description: \"是由 Hinton 的学生 Alex Krizhevsky 和 Ilya Sutskever 整理的一个用于识别普适物体的小型数据集。一共包含 10 个类别的 RGB 彩色图 片：飞机（ airplane ）、汽车（ automobile ）、鸟类（ bird ）、猫（ cat ）、鹿（ deer ）、狗（ dog ）、蛙类（ frog ）、马（ horse ）、船（ ship ）和卡车（ truck ）。图片的尺寸为 32×32 ，数据集中一共有 50000 张训练圄片和 10000 张测试图片。\",\r\n                pictureSrcs: [\r\n                    [require('../assets/img/cifar100.jpg'), \r\n                    require('../assets/img/cifar101.jpg'),\r\n                    require('../assets/img/cifar102.jpg'), \r\n                    require('../assets/img/cifar103.jpg'), \r\n                    require('../assets/img/cifar104.jpg'), \r\n                    require('../assets/img/cifar105.jpg'), \r\n                    require('../assets/img/cifar106.jpg'),\r\n                    require('../assets/img/cifar107.jpg'),\r\n                    require('../assets/img/cifar108.jpg'),\r\n                    require('../assets/img/cifar109.jpg')],\r\n                    ],\r\n                },\r\n                {\r\n                    name: \"MNIST\",\r\n                    description: \"是一个手写体数字的图片数据集，该数据集来由美国国家标准与技术研究所（National Institute of Standards and Technology (NIST)）发起整理，一共统计了来自250个不同的人手写数字图片，其中50%是高中生，50%来自人口普查局的工作人员。该数据集的收集目的是希望通过算法，实现对手写数字的识别。\",\r\n                    class:['数字0','数字1','数字2','数字3','数字4','数字5','数字6','数字7','数字8','数字9'],\r\n                    pictureSrcs: [\r\n                        [require(\"../assets/img/mnist0.jpg\"),\r\n                        require('../assets/img/mnist1.jpg'),\r\n                        require('../assets/img/mnist2.jpg'), \r\n                        require('../assets/img/mnist3.jpg'), \r\n                        require('../assets/img/mnist4.jpg'), \r\n                        require('../assets/img/mnist5.jpg'), \r\n                        require('../assets/img/mnist6.jpg'),\r\n                        require('../assets/img/mnist7.jpg'),\r\n                        require('../assets/img/mnist8.jpg'),\r\n                        require('../assets/img/mnist9.jpg'),],\r\n                    ],\r\n                },\r\n                \r\n            ],\r\n            selectedDataset: 0,\r\n            modelInfo: [\r\n                {\r\n                    name: \"ResNet18\",\r\n                    layer:18\r\n                },\r\n                {\r\n                    name: \"ResNet34\",\r\n                    layer:34\r\n                },\r\n                {\r\n                    name: \"ResNet50\",\r\n                    layer:50\r\n                },\r\n                // {\r\n                //     name: \"ResNet101\",\r\n                //     layer:101\r\n                // },\r\n                // {\r\n                //     name: \"ResNet152\",\r\n                //     layer:152\r\n                // },\r\n            ],\r\n            selectedModel: 0,\r\n            methodInfo: [\r\n                {\r\n                    name: \"FGSM\",\r\n                    id:\"FGSM\",\r\n                    description: \"Fast Gradient Sign MethodFGSM快速梯度符号法是一种简单而有效的生成对抗样本的方法，其工作方式如下：在给定输入数据后，利用已训练的模型输出预测并计算损失函数的梯度，然后使用梯度的符号来创建使损失最大化的新数据\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.031, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                            { name: \"范数\", key:\"norm\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"1\",\"2\",\"inf\"]},\r\n                        \r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"BIM\",\r\n                    id:\"BIM\",\r\n                    description: \"Basic Iterative MethodBIM迭代式FGSM是对FGSM的改进方法，主要的改进有两点，其一是FGSM方法是一步完成的，而BIM方法通过多次迭代来寻找对抗样本；其次，为了避免迭代过程中出现超出有效值的情况出现，使用了一个修建方法严格限制像素值的范围\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.031, number: 0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.01, number: 0, type: \"inputNumber\" , min: 0, step:1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        { name: \"范数\", key:\"norm\", defaultNumber: 2, number: 2, type: \"selectgroup\" ,valuelist:[1,2,\"inf\"]},\r\n                    ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"PGDL1\",\r\n                    id:\"PGDL1\",\r\n                    description: \"Projected Gradient DescentPGD投影梯度下降法是FGSM的迭代版本，该方法思路和BIM基本相同，不同之处在于该方法在迭代过程中使用范数投影的方法来约束非法数据，并且相对于BIM有一个随机的开始噪声。支持L1 norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.3, number: 0.0, type: \"inputNumber\" , min: 0,step:0.1},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.1, number: 0.0, type: \"inputNumber\" , min: 0, step:0.1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" , min: 1,  step:1},\r\n                        { name: \"随机开始次数\", key:\"num_random_init\", defaultNumber: 1, number: 0, type: \"inputNumber\" ,min: 0,  step:1},\r\n                    ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"PGDL2\",\r\n                    id:\"PGDL2\",\r\n                    description: \"Projected Gradient DescentPGD投影梯度下降法是FGSM的迭代版本，该方法思路和BIM基本相同，不同之处在于该方法在迭代过程中使用范数投影的方法来约束非法数据，并且相对于BIM有一个随机的开始噪声。支持L2 norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.3, number: 0.0, type: \"inputNumber\" , min: 0,step:0.1},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.1, number: 0.0, type: \"inputNumber\" , min: 0, step:0.1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" , min: 1,  step:1},\r\n                        { name: \"随机开始次数\", key:\"num_random_init\", defaultNumber: 1, number: 0, type: \"inputNumber\" ,min: 0,  step:1},\r\n                    ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"PGDLinf\",\r\n                    id:\"PGDLinf\",\r\n                    description: \"Projected Gradient DescentPGD投影梯度下降法是FGSM的迭代版本，该方法思路和BIM基本相同，不同之处在于该方法在迭代过程中使用范数投影的方法来约束非法数据，并且相对于BIM有一个随机的开始噪声。支持Linf norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.3, number: 0.0, type: \"inputNumber\" , min: 0,step:0.1},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.1, number: 0.0, type: \"inputNumber\" , min: 0, step:0.1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" , min: 1,  step:1},\r\n                        { name: \"随机开始次数\", key:\"num_random_init\", defaultNumber: 1, number: 0, type: \"inputNumber\" ,min: 0,  step:1},   \r\n                    ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"C&W\",\r\n                    id:\"C&W\",\r\n                    description: \"该方法的出发点是攻击比较有名的对抗样本防御方法-防御蒸馏(就防御蒸馏方法而言，它在基本的L-BFGS，FGSM攻击方法上表现本身就比较差)。对于寻找对抗样本过程中目标函数的设置将会极大的影响对抗样本的攻击效果，为此，通过目标函数的设定，在零范数，二范数和无穷范数的限制下分别设计了三种不同的寻找对抗样本的目标函数，这三种方法均可以绕过防御蒸馏的防御\",\r\n                    attributes: [\r\n                        [{ name: \"最大迭代次数\", key:\"max_iterations\", defaultNumber: 1000, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        { name: \"优化器学习率\", key:\"lr\", defaultNumber: 0.01, number: 0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"DeepFool\",\r\n                    id:\"DeepFool\",\r\n                    description: \"DeepFool方法的出发点是想要精确的度量模型对于对抗样本的鲁棒性，为此提出了鲁棒性定义和计算方法。最终使用该计算方法生成对抗样本\",\r\n                    attributes: [\r\n                        [ {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 50, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        { name: \"扰动系数\", key:\"eta\", defaultNumber: 0.02, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"JSMA\",\r\n                    id:\"JacobianSaliencyMap\",\r\n                    description: \"该方法通过输入样本每一个位置的前向导数，借鉴模型解释性方法中的显著图理论，构造了一种对抗显著图。对抗显著图上的点的值就是样本中每一个点对每个目标类的前向导数大小，直觉上来讲，其反映的是该样本点对生成某一个目标类对抗样本的贡献度。那么使用该对抗显著图，确定需要攻击到的目标类后，便可以从该图中选择对目标类对抗影响最大的点进行修改即可。\",\r\n                    attributes: [\r\n                        [{name: \"噪声大小\", key:\"theta\", defaultNumber: 0.1, number: 0.0, type: \"inputNumber\" , step:0.1},\r\n                        { name: \"允许修改的最大特征百分比\", key:\"gamma\", defaultNumber: 1.0, number: 0.0, type: \"inputNumber\" , min: 0, max: 1, step:0.1},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"Brendel&BethgeAttack\",\r\n                    id:\"Brendel&BethgeAttack\",\r\n                    description: \"边界攻击的基本思想是从一个已经是对抗样本的点(无目标攻击随意选择，有目标攻击选择目标类图片)开始，通过随机游走算法来减少对抗样本的强度，使其在决策边界上和被攻击的样本接近\",\r\n                    attributes: [\r\n                        [{ name: \"正交步骤的初始步长\", key:\"delta\", defaultNumber: 0.01, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        { name: \"趋近步骤的初始步长大小\", key:\"eps\", defaultNumber: 0.01, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        {name: \"调整步长因数\", key:\"step_adapt\", defaultNumber: 0.667, number: 0.0, type: \"inputNumber\" , min: 0, max: 1, step:0.001},\r\n                        { name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 1000, number: 0, type: \"inputNumber\" ,min: 1, step:1},   \r\n                        ],[\r\n                        { name: \"每次迭代的最大判定数\", key:\"num_trial\", defaultNumber: 25, number: 0, type: \"inputNumber\" , min: 1,step:1},\r\n                        { name: \"每次判定的样本数目\", key:\"sample_size\", defaultNumber: 20, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        {name: \"初始化的判定次数\", key:\"init_size\", defaultNumber: 100, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        ]\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"UniversalPerturbationL1\",\r\n                    id:\"UniversalPerturbationL1\",\r\n                    description: \"在一个给定模型和数据集上，通过迭代算法寻找一个让大多数图片都被错误分类的对抗噪声。支持L1 norm范数\",\r\n                    attributes: [\r\n                        [{ name: \"攻击方法\", key:\"attacker\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"FGSM\",\"BIM\",\"PGD\", \"DeepFool\", \"JSMA\", \"Carlini_l2\",\"Carlini_inf\",\"Simba\"]},],\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.078, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" ,min: 0, step:1},],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"UniversalPerturbationL2\",\r\n                    id:\"UniversalPerturbationL2\",\r\n                    description: \"在一个给定模型和数据集上，通过迭代算法寻找一个让大多数图片都被错误分类的对抗噪声。支持L2 norm范数\",\r\n                    attributes: [\r\n                        [{ name: \"攻击方法\", key:\"attacker\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"FGSM\",\"BIM\",\"PGD\", \"DeepFool\", \"JSMA\", \"Carlini_l2\",\"Carlini_inf\",\"Simba\"]},],[\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.078, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" ,min: 0, step:1},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"UniversalPerturbationLinf\",\r\n                    id:\"UniversalPerturbationLinf\",\r\n                    description: \"在一个给定模型和数据集上，通过迭代算法寻找一个让大多数图片都被错误分类的对抗噪声。支持Linf norm范数\",\r\n                    attributes: [\r\n                        [{ name: \"攻击方法\", key:\"attacker\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"FGSM\",\"BIM\",\"PGD\", \"DeepFool\", \"JSMA\", \"Carlini_l2\",\"Carlini_inf\",\"Simba\"]},],[\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.078, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 20, number: 0, type: \"inputNumber\" ,min: 0, step:1},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"AutoAttackL1\",\r\n                    id:\"AutoAttackL1\",\r\n                    description: \"该方法首先改进了PGD方法的步长调整方法以及其的损失函数，并且进一步将白盒的FAB攻击和黑盒的Square攻击集成到了框架中。支持L1 norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.031, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.01, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"AutoAttackL2\",\r\n                    id:\"AutoAttackL2\",\r\n                    description: \"该方法首先改进了PGD方法的步长调整方法以及其的损失函数，并且进一步将白盒的FAB攻击和黑盒的Square攻击集成到了框架中。支持L2 norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.031, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.01, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"AutoAttackLinf\",\r\n                    id:\"AutoAttackLinf\",\r\n                    description: \"该方法首先改进了PGD方法的步长调整方法以及其的损失函数，并且进一步将白盒的FAB攻击和黑盒的Square攻击集成到了框架中。支持Linf norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.031, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        { name: \"步长参数\", key:\"eps_step\", defaultNumber: 0.01, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"GD-UAP\",\r\n                    id:\"GD-UAP\",\r\n                    description: \"该方法在UAP工作的基础上提出了数据不相关的通用对抗噪声。与UAP生成的基本方法不同，该方法以对一个神经网络所有神经元产生更大的输出为目标，即以寻求那些可以使网络整体神经元更加激活的输入噪声为目标，并且将该噪声作为通用对抗噪声\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"最小饱和度\", key:\"sat_min\", defaultNumber: 0.35, number: 0, type: \"inputNumber\" , min: 0, max: 1, step:0.01},\r\n                        { name: \"饱和度阈值\", key:\"sat_threshold\", defaultNumber: 0.00001, number: 0, type: \"inputNumber\" , min: 0, max: 1, step:0.00001},\r\n                        { name: \"扰动系数\", key:\"eps\", defaultNumber: 0.078, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},],\r\n                        [\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 10000, number: 0, type: \"inputNumber\" ,min: 1,step:1},\r\n                        {name: \"耐心间隔\", key:\"patience_interval\", defaultNumber: 10, number: 0, type: \"inputNumber\" ,min: 0, step:1},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"SquareAttackL1\",\r\n                    id:\"SquareAttackL1\",\r\n                    description: \"该方法的主体思路是使用优化理论中的随机搜索方法来寻找对抗噪声，这种随机搜索的方法很多黑盒攻击方法都采用过。随机搜索的总体框架大体相同，如下图所示。基本思路是在在一个采用空间中随机选择一个噪声，如果该噪声能够降低目标函数的损失则将其添加到原图片上，否则进入下一轮的随机搜索。支持L1 norm范数。\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"初始化百分比\", key:\"p_init\", defaultNumber: 0.05, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        { name: \"重启次数\", key:\"n_restarts\", defaultNumber: 1, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        { name: \"loss类型\", key:\"loss_type\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"margin\",\"ce\"]},    \r\n                    ],\r\n                    ]\r\n                },{\r\n                    name: \"SquareAttackL2\",\r\n                    id:\"SquareAttackL2\",\r\n                    description: \"该方法的主体思路是使用优化理论中的随机搜索方法来寻找对抗噪声，这种随机搜索的方法很多黑盒攻击方法都采用过。随机搜索的总体框架大体相同，如下图所示。基本思路是在在一个采用空间中随机选择一个噪声，如果该噪声能够降低目标函数的损失则将其添加到原图片上，否则进入下一轮的随机搜索。支持L2 norm范数。\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"初始化百分比\", key:\"p_init\", defaultNumber: 0.05, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        { name: \"重启次数\", key:\"n_restarts\", defaultNumber: 1, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        { name: \"loss类型\", key:\"loss_type\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"margin\",\"ce\"]},\r\n                    ],\r\n                    ]\r\n                },{\r\n                    name: \"SquareAttackLinf\",\r\n                    id:\"SquareAttackLinf\",\r\n                    description: \"该方法的主体思路是使用优化理论中的随机搜索方法来寻找对抗噪声，这种随机搜索的方法很多黑盒攻击方法都采用过。随机搜索的总体框架大体相同，如下图所示。基本思路是在在一个采用空间中随机选择一个噪声，如果该噪声能够降低目标函数的损失则将其添加到原图片上，否则进入下一轮的随机搜索。支持Linf norm范数。\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"初始化百分比\", key:\"p_init\", defaultNumber: 0.05, number: 0.0, type: \"inputNumber\" , min: 0, step:0.01},\r\n                        { name: \"重启次数\", key:\"n_restarts\", defaultNumber: 1, number: 0, type: \"inputNumber\" , min: 1, step:1},\r\n                        { name: \"loss类型\", key:\"loss_type\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"margin\",\"ce\"]},\r\n                    ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"HSJA\",\r\n                    id:\"HSJA\",\r\n                    description: \"在优化框架下的基于决策的攻击，并提出了一系列新颖的算法，用于生成针对性和非针对性的对抗性示例，这些示例针对“ 2-距离”或“∞距离”的最小距离进行了优化。 该算法本质上是迭代的，每个迭代涉及三个步骤：梯度方向的估计，通过几何级数进行的步长搜索和通过二分法的边界搜索。对优化框架和梯度方向估计进行了理论分析。这不仅为选择超参数提供了参考，而且还激发了所提出算法中的必要步骤\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"梯度估计的最大次数\", key:\"max_eval\", defaultNumber: 1000, number: 0, type: \"inputNumber\" , min:1, step:1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 50, number: 0, type: \"inputNumber\" ,min: 1,  step:1},\r\n                        { name: \"范数\", key:\"norm\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[2,\"inf\"]},    \r\n                    ],[\r\n                        { name: \"梯度估计的初始次数\", key:\"init_eval\", defaultNumber: 100, number: 0, type: \"inputNumber\" , min:1, step:1},\r\n                        {name: \"初始最大试验次数\", key:\"init_size\", defaultNumber: 100, number: 0.0, type: \"inputNumber\" ,min: 1,  step:1},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"PixelAttack\",\r\n                    id:\"PixelAttack\",\r\n                    description: \"使用差分进化算法寻找满足零范数约束的对抗样本\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"允许修改的像素数目\", key:\"th\", defaultNumber: 1, number: 0, type: \"inputNumber\" , min: 1, max: 784, step:1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 5, number: 0, type: \"inputNumber\" ,min: 1, step:1},\r\n                        { name: \"进化算法\", key:\"es\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"DE\",\"CMAES\"]},],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"SimBA\",\r\n                    id:\"SimBA\",\r\n                    description: \"该方法的基本思想为对于图片空间的任意一个方向，添加或者减少一个扰动值，总是有可能让神经网络对于该图片属于某个类别的分数变得更低或者更高，因此论文通过随机选择一些坐标点，通过添加或者减少扰动值，使图片分类到某个类别的分数总是往更低的方向去，从而最终导致图片分类错误。这可以看作是一种贪婪的选择策略，每一步都选择对于自己最优的方向，以此来接近全局最优\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"过冲参数\", key:\"epsilon\", defaultNumber: 0.031, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 3000, number: 0, type: \"inputNumber\" ,min: 0, step:1},    \r\n                        { name: \"攻击方法\", key:\"attack\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"dct\",\"px\"]},\r\n                        { name: \"pixel攻击的顺序\", key:\"order\", defaultNumber: 0, number: 0, type: \"selectgroup\" ,valuelist:[\"random\",\"diag\"]},\r\n                        \r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"ZOO\",\r\n                    id:\"ZOO\",\r\n                    description: \"在一个给定模型和数据集上，通过迭代算法寻找一个让大多数图片都被错误分类的对抗噪声。支持Linf norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        { name: \"步长\", key:\"step_size\", defaultNumber: 0.01, number: 0, type: \"inputNumber\" , min: 0, max:1, step:0.01},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 3000, number: 0, type: \"inputNumber\" ,min: 1, step:1},\r\n                        { name: \"初始常量\", key:\"initial_const\", defaultNumber: 0.01, number: 0, type: \"inputNumber\" , min: 0, max:1, step:0.01},\r\n                        { name: \"置信度\", key:\"confidence\", defaultNumber: 0, number: 0.0, type: \"inputNumber\" , min: 0, step:0.001},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"GeoDAL1\",\r\n                    id:\"GeoDAL1\",\r\n                    description: \"该方法基于神经网络决策边界往往具有较低曲率的事实假设，提出了一种在线性框架下通过法向量估计的方法完成黑盒基于决策模式下的对抗样本搜寻的方法。支持L1 norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        {name: \"二维频率空间维数\", key:\"sub_dim\", defaultNumber: 10, number: 0, type: \"inputNumber\" ,min: 1,step:1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 1, number: 0, type: \"inputNumber\" ,min: 1, step:1},\r\n                        { name: \"高斯扰动方差\", key:\"sigma\", defaultNumber: 0.0002, number: 0.0, type: \"inputNumber\" , min: 0, step:0.0001},\r\n                        { name: \"λ参数\", key:\"lambda_param\", defaultNumber: 0.6, number: 0.0, type: \"inputNumber\" , min: 0, step:0.1},\r\n                        ],\r\n                    ]\r\n                },{\r\n                    name: \"GeoDAL2\",\r\n                    id:\"GeoDAL2\",\r\n                    description: \"该方法基于神经网络决策边界往往具有较低曲率的事实假设，提出了一种在线性框架下通过法向量估计的方法完成黑盒基于决策模式下的对抗样本搜寻的方法。支持L2 norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        {name: \"二维频率空间维数\", key:\"sub_dim\", defaultNumber: 10, number: 0, type: \"inputNumber\" ,min: 1,step:1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 1, number: 0, type: \"inputNumber\" ,min: 1, step:1},\r\n                        { name: \"高斯扰动方差\", key:\"sigma\", defaultNumber: 0.0002, number: 0.0, type: \"inputNumber\" , min: 0, step:0.0001},\r\n                        { name: \"λ参数\", key:\"lambda_param\", defaultNumber: 0.6, number: 0.0, type: \"inputNumber\" , min: 0, step:0.1},\r\n                        ],\r\n                    ]\r\n                },{\r\n                    name: \"GeoDALinf\",\r\n                    id:\"GeoDALinf\",\r\n                    description: \"该方法基于神经网络决策边界往往具有较低曲率的事实假设，提出了一种在线性框架下通过法向量估计的方法完成黑盒基于决策模式下的对抗样本搜寻的方法。支持Linf norm范数\",\r\n                    attributes: [\r\n                        [\r\n                        {name: \"二维频率空间维数\", key:\"sub_dim\", defaultNumber: 10, number: 0, type: \"inputNumber\" ,min: 1,step:1},\r\n                        {name: \"最大迭代次数\", key:\"max_iter\", defaultNumber: 1000, number: 0, type: \"inputNumber\" ,min: 1, step:1},\r\n                        { name: \"高斯扰动方差\", key:\"sigma\", defaultNumber: 0.0002, number: 0.0, type: \"inputNumber\" , min: 0, step:0.0001},\r\n                        { name: \"λ参数\", key:\"lambda_param\", defaultNumber: 0.6, number: 0.0, type: \"inputNumber\" , min: 0, step:0.1},\r\n                        ],\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"Fastdrop\",\r\n                    id:\"Fastdrop\",\r\n                    description: \"该方法利用图像频域修改更加容易产生高质量对抗样本的思想，通过将图像变换到频域后，使用简单的频域小量随机丢弃和还原的搜索策略完成攻击\",\r\n                    attributes: [\r\n                    ]\r\n                },\r\n            ],\r\n            DefenseInfo: [\r\n                {\r\n                    name: \"Nash博弈\",\r\n                    id:\"Nash\",\r\n                    src: require('../assets/img/NashBalanceImg.png')\r\n                },\r\n                {\r\n                    name: \"集成博弈\",\r\n                    id:\"Inte\",\r\n                    src: require('../assets/img/InterDefenseImg.png')\r\n                },\r\n                {\r\n                    name: \"自动攻击检测PACA\",\r\n                    id:\"PACA\",\r\n                    src: require('../assets/img/PACAImg.png')\r\n                },\r\n                {\r\n                    name: \"待定1\",\r\n                    id:\"tmp1\",\r\n                    src: \"\"\r\n                },\r\n                {\r\n                    name: \"待定2\",\r\n                    id:\"tmp2\",\r\n                    src: \"\"\r\n                },\r\n                {\r\n                    name: \"待定3\",\r\n                    id:\"tmp3\",\r\n                    src: \"\"\r\n                },\r\n            ],\r\n            selectedMethod:[\"FGSM\"],\r\n            selectedAttributes: {},\r\n            selectedDefense: [\"Nash\"],\r\n            resultVisible: true,\r\n            postData:{},\r\n        }\r\n    },\r\n    watch: {\r\n        /* 判断弹框是否显示，如果true显示结果弹框，并且底层滚动取消*/\r\n        isShowPublish:{\r\n            immediate:true,\r\n            handler(v){\r\n                if(v){\r\n                    this.noScroll();\r\n                }else{\r\n                    this.canScroll();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        document.title = '模型群智化防御';\r\n        },\r\n    methods: { \r\n        /* 关闭结果窗口 */\r\n        closeDialog(){\r\n            this.resultVisible=false;\r\n            //把绑定的弹窗数组 设为false即可关闭弹窗\r\n        },\r\n        updateMethod(index, checked){\r\n            if (checked == true){\r\n                this.selectedMethod.push(this.methodInfo[index].id)\r\n            }else{\r\n                this.selectedMethod.splice(this.selectedMethod.indexOf(this.methodInfo[index].id),1)\r\n            }\r\n            console.log(this.selectedMethod)\r\n        },\r\n        updateDefense(index, checked){\r\n            if (checked == true){\r\n                this.selectedDefense.push(this.DefenseInfo[index].id)\r\n            }else{\r\n                this.selectedDefense.splice(this.selectedDefense.indexOf(this.DefenseInfo[index].id),1)\r\n            }\r\n            console.log(this.selectedDefense)\r\n        },\r\n        /* 获取结果 */ \r\n        getData(){\r\n            var that = this;\r\n            that.$axios.get('/api/output/Resultdata', {params:{ Taskid: that.tid }}).then((data)=>{\r\n                console.log(\"dataget:\",data);\r\n                that.result=data;\r\n            });\r\n        },\r\n        /* 获取日志 */ \r\n        getLog(){\r\n            debugger\r\n            var that = this;\r\n            if(that.percent < 99){\r\n               that.percent += 1;\r\n            }\r\n            that.$axios.get('/api/Task/QueryLog', { params: { Taskid: that.tid } }).then((data) => {\r\n                console.log(\"log:\",data)\r\n                if (JSON.stringify(that.stidlist)=='{}'){\r\n                    that.logtext = [Object.values(data.data.Log).slice(-1)[0]];\r\n                }else{\r\n                    that.logtext=[]\r\n                    for(let temp in that.stidlist){\r\n                        that.logtext.push(data.data.Log[that.stidlist[temp]]);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        /* 停止结果获取循环 */ \r\n        stopTimer() {\r\n            if (this.result.data.stop == 1) {\r\n                // 关闭日志显示\r\n                this.logflag = false;\r\n                // 关闭结果数据获取data\r\n                clearInterval(this.clk);\r\n                // 关闭日志获取结果获取\r\n                clearInterval(this.logclk);\r\n                                // 处理结果\r\n                this.result = this.result.data.result;\r\n                this.result[\"tid\"] = this.tid\r\n                this.result[\"stidlist\"] = this.stidlist\r\n                // 显示结果窗口\r\n                this.resultVisible = true\r\n\r\n            }else if(this.result.data.stop == 2){\r\n                this.percent=100\r\n                // 关闭结果数据获取data\r\n                clearInterval(this.clk);\r\n                this.clk=null\r\n                // 关闭日志获取结果获取\r\n                clearInterval(this.logclk);\r\n                this.logclk = null\r\n            }\r\n        },\r\n        /* 更新结果*/ \r\n        update(){\r\n            this.getData();\r\n            try{\r\n                this.stopTimer();\r\n            }catch(err){}\r\n        },\r\n        /* 点击评估触发事件 */\r\n        dataEvaClick() {\r\n            this.postData={}\r\n            let dataset = this.dataSetInfo[this.selectedDataset].name;\r\n            let model = this.modelInfo[this.selectedModel].name\r\n            if(this.selectedMethod.length == 0){\r\n                this.$message.warning('请至少选择一项对抗攻击方法！',3);\r\n                return\r\n            }\r\n            // 检查各个方法的参数\r\n            for(let i = 0; i < this.selectedMethod.length; i ++){\r\n                if (!(this.selectedMethod[i] in this.selectedAttributes)){\r\n                    let attributes_dict = {}\r\n                    let info =[]\r\n                    for( let methodnum = 0 ; methodnum < this.methodInfo.length; methodnum++){\r\n                        if (this.methodInfo[methodnum].id == this.selectedMethod[i]){\r\n                            info = this.methodInfo[methodnum].attributes\r\n                            break\r\n                        }\r\n                    }\r\n                    for(let i = 0; i < info.length; i++) {\r\n                        for(let j = 0; j < info[i].length; j++) {\r\n                            if ( info[i][j].type ==  \"selectgroup\"){\r\n                                attributes_dict[info[i][j].key] = info[i][j].valuelist[info[i][j].defaultNumber]\r\n                            }else{\r\n                                attributes_dict[info[i][j].key] = info[i][j].defaultNumber\r\n                            }\r\n                        }\r\n                    }\r\n                    this.postData[this.selectedMethod[i]] = attributes_dict\r\n                }else{\r\n                    this.postData[this.selectedMethod[i]] = this.selectedAttributes[this.selectedMethod[i]]\r\n                }\r\n            }\r\n            this.logtext = [];\r\n            this.logflag = true;\r\n            var that = this;\r\n            that.$axios.post(\"/api/Task/CreateTask\", { AttackAndDefenseTask: 0 }).then((result) => {\r\n                console.log(result);\r\n                that.tid = result.data.Taskid;\r\n                that.logclk = setInterval(() => {\r\n                        that.getLog();\r\n                    }, 6000)\r\n                /* 请求体 postdata*/\r\n                that.postData[\"Dataset\"] = dataset\r\n                that.postData[\"Model\"] = model\r\n                that.postData[\"Method\"] = JSON.stringify(that.selectedMethod)\r\n                that.postData[\"Taskid\"] = that.tid\r\n                console.log(that.postData)\r\n                that.$axios.post(\"/api/Attack/AdvAttack\", that.postData).then((res) => {\r\n                    that.stidlist =  {\"advattack\":res.data.stid};\r\n                    that.clk = setInterval(() => {\r\n                            that.update();\r\n                        }, 30000)\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    clearInterval(that.logclk);\r\n                });\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            });\r\n        },\r\n        // 更换数据集\r\n        changeDataset(index) {\r\n            this.selectedDataset = index;\r\n        },\r\n        // 更换模型\r\n        changeModel(index) {\r\n            this.selectedModel = index;\r\n        },\r\n        // 更新方法参数\r\n        updataMethodAttributes(index, attributes_dict) {\r\n            this.selectedAttributes[this.methodInfo[index].id] = attributes_dict;\r\n        },\r\n        changeDefense(index) {\r\n            this.selectedDefense = index;\r\n        },\r\n        // 防御方法点击选中\r\n        changeMethods(i, j) {\r\n            debugger;\r\n            let button = document.getElementById(\"button\" + i + j)\r\n            if (button.style.color == \"\") {\r\n\r\n                button.style.color = \"#0B55F4\"\r\n                button.style.borderColor = \"#C8DCFB\"\r\n                button.style.background = \"#F2F4F9\"\r\n                this.selectedMethod.push(this.methodInfoNoParam[i][j].name)\r\n                this.selectedAttributes[this.methodInfoNoParam[i][j].name] = {}\r\n            } else {\r\n\r\n                button.style.color = \"\"\r\n                button.style.borderColor = \"#C8DCFB\"\r\n                button.style.background = \"#F2F4F9\"\r\n                button.blur()\r\n                this.selectedMethod.splice(this.selectedMethod.indexOf(this.methodInfoNoParam[i][j].name), 1 )\r\n                delete this.selectedAttributes[this.methodInfoNoParam[i][j].name]\r\n            }\r\n        },\r\n    }\r\n}\r\n</script>\r\n<!-- <style  scoped> -->\r\n<style scoped>\r\n\r\n.paramCon{\r\n    width: 1200px;\r\n    margin-left: 360px;\r\n}\r\n.paramTitle{\r\n    height:80px;\r\n    padding: 20px 24px 20px 26px;\r\n    text-align: left;\r\n    width: 1200px;\r\n}\r\n\r\n.paramTitle h3{\r\n    /* height: 48px; */\r\n    display: inline;\r\n    margin-top: 38px;\r\n    width: 279px;\r\n    height: 36px;\r\n    font-family: 'HONOR Sans CN';\r\n    font-size: 24px;\r\n    color: #333333;\r\n    letter-spacing: 0;\r\n    line-height: 48px;\r\n    font-weight: 600;\r\n}\r\n/* 按钮样式 */\r\n.DataEva{\r\n    float: right;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 20px;\r\n    line-height: 20px;\r\n    padding: 0px 24px;\r\n    font-family: 'Microsoft YaHei';\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0px 24px;\r\n    gap: 4px;\r\n    width: 114px;\r\n    height: 40px;\r\n    background: #FFFFFF;\r\n    border-radius: 6px;\r\n}\r\n.denfenseMethod .ant-btn{\r\n    width: 100%;\r\n    background-color: #F2F4F9;\r\n    font-size:20px;\r\n    height:50px;\r\n    color:#000\r\n}\r\n.ant-divider-horizontal{\r\n    margin: 0 0;\r\n}\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/crowdDefense.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('a-layout',[_c('a-layout-header',[_c('navmodule')],1),_vm._v(\" \"),_c('a-layout-content',[_c('func_introduce',{attrs:{\"funcDesText\":_vm.funcDesText}}),_vm._v(\" \"),_c('div',{staticClass:\"paramCon\"},[_c('h2',{staticClass:\"subTitle\",staticStyle:{\"margin-top\":\"-96px\"}},[_vm._v(\"参数配置\")]),_vm._v(\" \"),_c('div',{staticClass:\"funcParam\"},[_c('div',{staticClass:\"paramTitle\"},[_c('img',{staticClass:\"paramIcom\",attrs:{\"src\":_vm.funcDesText.imgpath,\"alt\":_vm.funcDesText.name}}),_vm._v(\" \"),_c('h3',[_vm._v(_vm._s(_vm.funcDesText.name))]),_vm._v(\" \"),_c('a-button',{staticClass:\"DataEva\",style:(_vm.buttonBGColor),attrs:{\"disabled\":_vm.disStatus},on:{\"click\":_vm.dataEvaClick}},[_c('a-icon',{attrs:{\"type\":\"security-scan\"}}),_vm._v(\"\\n                           评估\\n                       \")],1)],1),_vm._v(\" \"),_c('a-divider'),_vm._v(\" \"),_c('div',{staticClass:\"inputdiv\"},[_c('div',{staticClass:\"mainParamNameNotop\"},[_vm._v(\"请选择数据集\")]),_vm._v(\" \"),_vm._l((_vm.dataSetInfo),function(info,index){return _c('DataSetCard',_vm._b({key:'Dataset' + index,staticStyle:{\"width\":\"1104px\",\"margin-bottom\":\"16px\"},attrs:{\"indexInParent\":index,\"checked\":index == _vm.selectedDataset},on:{\"selectDataset\":_vm.changeDataset}},'DataSetCard',info,false))}),_vm._v(\" \"),_c('div',{staticClass:\"mainParamName48\"},[_vm._v(\"请选择模型\")]),_vm._v(\" \"),_vm._l((_vm.modelInfo),function(info,index){return _c('ModelCard',_vm._b({key:'Model' + index,staticStyle:{\"width\":\"1104px\",\"margin-bottom\":\"16px\"},attrs:{\"indexInParent\":index,\"checked\":index == _vm.selectedModel},on:{\"selectModel\":_vm.changeModel}},'ModelCard',info,false))}),_vm._v(\" \"),_c('div',{staticClass:\"mainParamName48\"},[_vm._v(\"请选择攻击方法（可多选）\")]),_vm._v(\" \"),_vm._l((_vm.methodInfo),function(info,index){return _c('MethodCard',_vm._b({key:'Method' + index,staticStyle:{\"width\":\"1104px\"},attrs:{\"indexInParent\":index,\"attack_type\":'advAttack',\"dataset\":_vm.selectedDataset,\"checked\":_vm.selectedMethod.indexOf(_vm.methodInfo[index].id) > -1},on:{\"updateAttributes\":_vm.updataMethodAttributes,\"selectMethod\":_vm.updateMethod}},'MethodCard',info,false))}),_vm._v(\" \"),_c('div',{staticClass:\"mainParamName48\"},[_vm._v(\"请选择群智化防御方法（可多选）\")]),_vm._v(\" \"),_vm._l((_vm.DefenseInfo),function(info,index){return _c('DefenseCard',_vm._b({key:'Defense' + index,staticStyle:{\"width\":\"1104px\"},attrs:{\"indexInParent\":index,\"checked\":_vm.selectedDefense.indexOf(_vm.DefenseInfo[index].id) > -1},on:{\"selectedDefense\":_vm.updateDefense}},'DefenseCard',info,false))}),_vm._v(\" \"),_c('CrowdDefenseEval',{attrs:{\"is-show\":_vm.resultVisible,\"result\":_vm.result,\"postData\":_vm.postData},on:{\"on-close\":function () { _vm.resultVisible = !_vm.resultVisible }}})],2)],1)]),_vm._v(\" \"),(_vm.logflag)?_c('div',[_c('showLog',{attrs:{\"percent\":_vm.percent,\"logtext\":_vm.logtext}})],1):_vm._e()],1),_vm._v(\" \"),_c('a-layout-footer',{staticClass:\"layoutFooter\"})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-04c95af2\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/crowdDefense.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-04c95af2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./crowdDefense.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./crowdDefense.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./crowdDefense.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-04c95af2\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./crowdDefense.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-04c95af2\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/crowdDefense.vue\n// module id = null\n// module chunks = ","module.exports = __webpack_public_path__ + \"static/img/crowdDefenseIcon.f7ed666.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/crowdDefenseIcon.png\n// module id = 9cUs\n// module chunks = 2 8","module.exports = __webpack_public_path__ + \"static/img/NashBalanceImg.d23368c.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/NashBalanceImg.png\n// module id = JdmF\n// module chunks = 8","module.exports = __webpack_public_path__ + \"static/img/PACAImg.3b4dccd.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/PACAImg.png\n// module id = dUMj\n// module chunks = 8","module.exports = __webpack_public_path__ + \"static/img/InterDefenseImg.7a744b4.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/InterDefenseImg.png\n// module id = ruMC\n// module chunks = 8"],"sourceRoot":""}